import { TransactionStatus } from "@toruslabs/base-controllers";
import { SafeEventEmitterProvider } from "@toruslabs/openlogin-jrpc";
import { FormattedTransactionActivity, TransactionPayload } from "./interfaces";
export declare function getEtherScanHashLink(txHash: string, chainId: string): string;
export declare const formatPastTx: (x: TransactionPayload, lowerCaseSelectedAddress?: string) => FormattedTransactionActivity;
/**
 * Ref - https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt
 */
export declare const getEthTxStatus: (hash: string, provider: SafeEventEmitterProvider) => Promise<TransactionStatus | undefined>;
export declare function formatDate(inputDate: string): string;
export declare function formatTime(time: number): string;
export declare const idleTimeTracker: {
    checkIfIdle: () => boolean;
};
export declare function isAddressByChainId(address: string, _chainId: string): boolean;
export declare function toChecksumAddressByChainId(address: string, chainId: string): string;
export declare const GAS_LIMITS: {
    SIMPLE: string;
    BASE_TOKEN_ESTIMATE: string;
};
export declare function bnLessThan(a: string | number, b: string | number): boolean;
export declare const getIpfsEndpoint: (path: string) => string;
export declare function sanitizeNftMetdataUrl(url: string): string;
export declare function getChainType(chainId: string): "mainnet" | "testnet" | "custom";
