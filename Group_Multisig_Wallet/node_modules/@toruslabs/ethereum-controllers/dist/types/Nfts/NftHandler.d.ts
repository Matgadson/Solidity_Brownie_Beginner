import { BrowserProvider } from "ethers";
import { CustomNftInfo, CustomNftItemInfo } from "../utils/interfaces";
interface INftOptions {
    contractAddress: string;
    contractName?: string;
    contractSymbol?: string;
    contractImage?: string;
    contractSupply?: string;
    contractFallbackLogo?: string;
    nftStandard?: "erc721" | "erc1155";
    contractDescription?: string;
    chainId: string;
    provider: BrowserProvider;
}
export declare class NftHandler {
    contractAddress: string;
    contractName: string;
    contractSymbol: string;
    contractImage: string;
    contractSupply?: string;
    contractFallbackLogo?: string;
    nftStandard: "erc721" | "erc1155";
    contractDescription?: string;
    chainId: string;
    provider: BrowserProvider;
    isSpecial?: boolean;
    constructor({ chainId, contractAddress, contractImage, contractName, contractSymbol, nftStandard, provider, contractDescription, contractFallbackLogo, contractSupply, }: INftOptions);
    getNftMetadata(userAddress: string, tokenInfo: Partial<CustomNftItemInfo>): Promise<CustomNftItemInfo>;
    getContractMetadata(): Promise<Omit<CustomNftInfo, "assets">>;
    fetchNftBalance(userAddress: string, tokenId: string): Promise<string>;
    private checkNftStandard;
    private contractSupportsInterface;
    private getCollectibleTokenURI;
}
export {};
