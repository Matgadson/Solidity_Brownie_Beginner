{"version":3,"file":"embed.cjs.js","mappings":"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","sources":["webpack://@web3auth/ws-embed/webpack/bootstrap","webpack://@web3auth/ws-embed/webpack/runtime/compat get default export","webpack://@web3auth/ws-embed/webpack/runtime/define property getters","webpack://@web3auth/ws-embed/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/ws-embed/webpack/runtime/make namespace object","webpack://@web3auth/ws-embed/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@web3auth/ws-embed/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/ws-embed/external commonjs2 \"@toruslabs/base-controllers\"","webpack://@web3auth/ws-embed/external commonjs2 \"@toruslabs/ethereum-controllers\"","webpack://@web3auth/ws-embed/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@web3auth/ws-embed/external commonjs2 \"@metamask/rpc-errors\"","webpack://@web3auth/ws-embed/external commonjs2 \"pump\"","webpack://@web3auth/ws-embed/./src/isStream.ts","webpack://@web3auth/ws-embed/./src/messages.ts","webpack://@web3auth/ws-embed/external commonjs2 \"loglevel\"","webpack://@web3auth/ws-embed/./src/loglevel.ts","webpack://@web3auth/ws-embed/./src/utils.ts","webpack://@web3auth/ws-embed/./src/baseProvider.ts","webpack://@web3auth/ws-embed/./src/interfaces.ts","webpack://@web3auth/ws-embed/./src/PopupHandler.ts","webpack://@web3auth/ws-embed/./src/communicationProvider.ts","webpack://@web3auth/ws-embed/./src/embedUtils.ts","webpack://@web3auth/ws-embed/external commonjs2 \"fast-deep-equal\"","webpack://@web3auth/ws-embed/./src/inPageProvider.ts","webpack://@web3auth/ws-embed/./src/siteMetadata.ts","webpack://@web3auth/ws-embed/./src/embed.ts","webpack://@web3auth/ws-embed/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectSpread2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/base-controllers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/ethereum-controllers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/rpc-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function isStream(stream: any) {\n  return stream !== null && typeof stream === \"object\" && typeof stream.pipe === \"function\";\n}\n\nexport function isWritableStream(stream: any) {\n  return isStream(stream) && stream.writable !== false && typeof stream._write === \"function\" && typeof stream._writableState === \"object\";\n}\n\nexport function isReadableStream(stream: any) {\n  return isStream(stream) && stream.readable !== false && typeof stream._read === \"function\" && typeof stream._readableState === \"object\";\n}\n\nexport function isDuplexStream(stream: any) {\n  return isWritableStream(stream) && isReadableStream(stream);\n}\n","export default {\n  errors: {\n    disconnected: (): string => \"Web3Auth: Lost connection to Web3Auth.\",\n    permanentlyDisconnected: (): string => \"Web3Auth: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Web3Auth: The Web3Auth Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Web3Auth: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"ws-embed\");\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: { ...(req || {}), cause: `The request 'method' must be a non-empty string.` },\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Ws-Embed - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Web3Auth: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { createLoggerMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  RequestArguments,\n  SafeEventEmitter,\n  SafeEventEmitterProvider,\n  SendCallBack,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport { isDuplexStream } from \"./isStream\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  /**\n   * Indicating that this provider is a Web3Auth provider.\n   */\n  public readonly isWeb3Auth: true;\n\n  protected state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isWeb3Auth = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this.handleConnect = this.handleConnect.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.handleStreamDisconnect = this.handleStreamDisconnect.bind(this);\n\n    this.rpcRequest = this.rpcRequest.bind(this);\n    this.initializeState = this.initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.send = this.send.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this.handleStreamDisconnect.bind(this, \"Web3Auth\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this.handleStreamDisconnect.bind(this, \"Web3Auth RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this.rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T, P>(args: RequestArguments<T>): Promise<Maybe<P>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this.rpcRequest({ method, params }, getRpcPromiseCallback(resolve as (value?: unknown) => void, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this.rpcRequest(payload, callback as (...args: unknown[]) => void);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this.rpcRequest(payload, getRpcPromiseCallback(resolve as (value?: unknown) => void, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits InpageProvider#disconnect\n   */\n  protected handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this.handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits InPageProvider#connect\n   */\n  protected abstract handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits InpageProvider#disconnect\n   */\n  protected abstract handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","import type { EthereumProviderConfig } from \"@toruslabs/ethereum-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { LogLevelDesc } from \"loglevel\";\n\nexport const WS_EMBED_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type WS_EMBED_BUILD_ENV_TYPE = (typeof WS_EMBED_BUILD_ENV)[keyof typeof WS_EMBED_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = (typeof LOGIN_PROVIDER)[keyof typeof LOGIN_PROVIDER];\n\nexport interface CtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface WalletUrlConfig {\n  url?: string;\n  logLevel?: LogLevelDesc;\n}\nexport interface WsEmbedParams {\n  /**\n   * Determines where the wsEmbed widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Chain to connect with\n   */\n  chainConfig?: EthereumProviderConfig;\n  /**\n   * Build Environment of WsEmbed.\n   *\n   * production uses https://casper.tor.us,\n   *\n   * development uses http://localhost:4050 (expects wallet-service-website to be run locally),\n   *\n   * testing uses https://casper-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: WS_EMBED_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide ws-embed widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showWidgetButton?: boolean;\n  /**\n   * whether to show/hide ws-embed widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  walletUrls?: Partial<Record<WS_EMBED_BUILD_ENV_TYPE, WalletUrlConfig>>;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  widgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n","import { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"@toruslabs/base-controllers\";\nimport { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: URL; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { EthereumProviderError } from \"@metamask/rpc-errors\";\nimport { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, RequestArguments } from \"@toruslabs/openlogin-jrpc\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { BUTTON_POSITION, CommunicationProviderState, LOGIN_PROVIDER_TYPE, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param  opts - An options bag\n */\nclass CommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    widgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  public windowRefs: Map<string, PopupHandler>;\n\n  public iframeUrl: string;\n\n  private iframe: HTMLIFrameElement;\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions,\n    state: Partial<CommunicationProviderState>\n  ) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this.state = {\n      ...CommunicationProvider.defaultState,\n      ...state,\n    };\n\n    // public state\n    this.iframeUrl = \"\";\n    this.windowRefs = new Map();\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this.state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<unknown>) => {\n      const { method, params } = payload;\n      // create_window should never come here..\n      // we either pre-open from embed.\n      // if it's blocked, we communicate down that it's blocked and we show full screen iframe and open from iframe\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params as Record<string, unknown>;\n        this.displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this.handleCloseWindow(params as Record<string, unknown>);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params as Record<string, unknown>;\n        this.state.isLoggedIn = true;\n        this.state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this.state.isLoggedIn = false;\n        this.state.currentLoginProvider = null;\n        this.displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this.state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this.state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this.state.isConnected;\n  }\n\n  async initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, torusIframe } = params;\n      this.iframeUrl = torusUrl as string;\n      this.iframe = torusIframe as HTMLIFrameElement;\n      this.iframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this.state.isIFrameFullScreen) this.displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Web3Auth: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this.state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  hideTorusButton(): void {\n    this.state.widgetVisibility = false;\n    this.displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.state.widgetVisibility = true;\n    this.displayIframe();\n  }\n\n  public displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this.state.widgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this.state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.iframe.style, style);\n    this.state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid?: string }, void>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  public async handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): Promise<void> {\n    const finalUrl = new URL(url || `${this.iframeUrl}/redirect?windowId=${windowId}`);\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    await handledWindow.open();\n    if (!handledWindow.window) {\n      this.displayIframe({ isFull: true });\n      this.request<{ windowId: string; finalUrl: string }, void>({\n        method: COMMUNICATION_JRPC_METHODS.WINDOW_BLOCKED,\n        params: { windowId, finalUrl: finalUrl.href },\n      });\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs.set(windowId, handledWindow);\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, void>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      this.windowRefs.delete(windowId);\n      this.request<{ windowId: string }, void>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this.state.isConnected) {\n      this.state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this.state.isConnected || (!this.state.isPermanentlyDisconnected && !isRecoverable)) {\n      this.state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.state.currentLoginProvider = null;\n        this.state.isLoggedIn = false;\n        this.state.widgetVisibility = false;\n        this.state.isIFrameFullScreen = false;\n        this.state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  private handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs.has(windowId)) {\n      this.windowRefs.get(windowId).close();\n      this.windowRefs.delete(windowId);\n    }\n  }\n}\n\nexport default CommunicationProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-deep-equal\");","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\nimport { EthereumProviderError } from \"@metamask/rpc-errors\";\nimport { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess, RequestArguments } from \"@toruslabs/openlogin-jrpc\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { EMITTED_NOTIFICATIONS } from \"./utils\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected EVM chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected EVM address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this.state = {\n      ...TorusInPageProvider.defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleUnlockStateChanged = this.handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this.state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this.handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this.handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this.handleChainChanged(params as Record<string, unknown>);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit(\"data\", payload);\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this.state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this.handleChainChanged({ chainId });\n      this.handleUnlockStateChanged({ accounts, isUnlocked });\n      this.handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"WsEmbed: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this.state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this.handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this.rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected handleConnect(chainId: string): void {\n    if (!this.state.isConnected) {\n      this.state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this.state.isConnected || (!this.state.isPermanentlyDisconnected && !isRecoverable)) {\n      this.state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this.state.accounts = null;\n        this.selectedAddress = null;\n        this.state.isUnlocked = false;\n        this.state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"WsEmbed: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"WsEmbed: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this.state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this.state.accounts) && this.state.accounts.length > 0 && !isInternal) {\n        log.error('WsEmbed: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this.state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"WsEmbed: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this.handleDisconnect(true);\n    } else {\n      this.handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this.state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"WsEmbed: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this.state.isUnlocked) {\n      this.state.isUnlocked = isUnlocked;\n      this.handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import {\n  COMMUNICATION_JRPC_METHODS,\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  randomId,\n} from \"@toruslabs/base-controllers\";\nimport { METHOD_TYPES, METHOD_TYPES_TYPE } from \"@toruslabs/ethereum-controllers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { Duplex } from \"readable-stream\";\n\nimport CommunicationProvider from \"./communicationProvider\";\nimport { htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  CtorArgs,\n  LOGIN_PROVIDER_TYPE,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WalletUrlConfig,\n  WS_EMBED_BUILD_ENV,\n  WS_EMBED_BUILD_ENV_TYPE,\n  WsEmbedParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport getSiteMetadata from \"./siteMetadata\";\n\nconst WALLET_URLS_DEFAULT: Record<WS_EMBED_BUILD_ENV_TYPE, WalletUrlConfig> = {\n  [WS_EMBED_BUILD_ENV.TESTING]: {\n    url: \"https://lrc-wallet.web3auth.io\",\n    logLevel: \"debug\",\n  },\n  [WS_EMBED_BUILD_ENV.DEVELOPMENT]: {\n    url: \"http://localhost:4050\",\n    logLevel: \"debug\",\n  },\n  [WS_EMBED_BUILD_ENV.PRODUCTION]: {\n    url: \"https://wallet.web3auth.io\",\n    logLevel: \"error\",\n  },\n};\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { url: torusUrl } = WALLET_URLS_DEFAULT.production;\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nexport const COMMUNICATION_UNSAFE_METHODS = new Set([COMMUNICATION_JRPC_METHODS.SET_PROVIDER]) as Set<\n  Partial<(typeof COMMUNICATION_JRPC_METHODS)[keyof typeof COMMUNICATION_JRPC_METHODS]>\n>;\n\nexport const PROVIDER_UNSAFE_METHODS = new Set([\n  METHOD_TYPES.ETH_DECRYPT,\n  METHOD_TYPES.ETH_GET_ENCRYPTION_PUBLIC_KEY,\n  METHOD_TYPES.ETH_SIGN,\n  METHOD_TYPES.ETH_SIGN_TYPED_DATA,\n  METHOD_TYPES.ETH_SIGN_TYPED_DATA_V3,\n  METHOD_TYPES.ETH_SIGN_TYPED_DATA_V4,\n  METHOD_TYPES.PERSONAL_SIGN,\n  METHOD_TYPES.ETH_TRANSACTION,\n  METHOD_TYPES.ADD_CHAIN,\n  METHOD_TYPES.SWITCH_CHAIN,\n]) as Set<Partial<METHOD_TYPES_TYPE>>;\n\nclass WsEmbed {\n  isInitialized: boolean;\n\n  modalZIndex: number;\n\n  provider: TorusInPageProvider;\n\n  widgetVisibility: boolean;\n\n  communicationProvider: CommunicationProvider;\n\n  buttonPosition: BUTTON_POSITION_TYPE;\n\n  private walletIframe: HTMLIFrameElement;\n\n  constructor({ modalZIndex = 99999 }: CtorArgs = {}) {\n    this.isInitialized = false; // init done\n    this.modalZIndex = modalZIndex;\n  }\n\n  async init({\n    buildEnv = WS_EMBED_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    chainConfig,\n    showWidgetButton: showTorusButton = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    walletUrls,\n  }: WsEmbedParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { url: torusUrl, logLevel } =\n      walletUrls && walletUrls[buildEnv] ? { ...WALLET_URLS_DEFAULT[buildEnv], ...walletUrls[buildEnv] } : WALLET_URLS_DEFAULT[buildEnv];\n    log.info(torusUrl, \"url loaded\");\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n    // sandbox=\"allow-popups allow-scripts allow-same-origin\"\n    // Iframe code\n    this.walletIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"walletIframe\"\n        class=\"walletIframe\"\n        sandbox=\"allow-popups allow-scripts allow-same-origin allow-forms\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.buttonPosition = buttonPosition;\n\n    return new Promise<void>((resolve, reject) => {\n      try {\n        window.document.body.appendChild(this.walletIframe);\n        this.walletIframe.addEventListener(\"load\", async () => {\n          const dappMetadata = await getSiteMetadata();\n          // send init params here\n          this.walletIframe.contentWindow.postMessage(\n            {\n              buttonPosition,\n              chainConfig,\n              dappMetadata,\n              enableLogging,\n            },\n            torusIframeUrl.origin\n          );\n          await this.setupWeb3({\n            torusUrl,\n          });\n          // if (showTorusButton) this.showTorusButton();\n          // else this.hideTorusButton();\n          this.widgetVisibility = showTorusButton;\n          this.isInitialized = true;\n          resolve();\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async login(params: { loginProvider?: LOGIN_PROVIDER_TYPE; login_hint?: string } = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      if (!params.loginProvider) {\n        this.communicationProvider.displayIframe({ isFull: true });\n      }\n\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider.rpcRequest(\n          { method: \"eth_requestAccounts\", params: [params.loginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve as (value?: unknown) => void, reject) as (...args: unknown[]) => void\n        );\n      });\n      log.info(\"check: res\", res);\n\n      if (Array.isArray(res) && res.length > 0) {\n        if (this.widgetVisibility) this.showTorusButton();\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      this.communicationProvider.displayIframe({ isFull: false });\n    }\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n\n    this.hideTorusButton();\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.walletIframe) && window.document.body.contains(this.walletIframe)) {\n      this.walletIframe.remove();\n      this.walletIframe = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    this.communicationProvider.displayIframe({ isFull: true });\n    await this.communicationProvider.request<[], boolean>({\n      method: COMMUNICATION_JRPC_METHODS.SHOW_WALLET_CONNECT,\n      params: [],\n    });\n  }\n\n  async showWalletUi(): Promise<void> {\n    this.communicationProvider.displayIframe({ isFull: true });\n    await this.communicationProvider.request<[], boolean>({\n      method: COMMUNICATION_JRPC_METHODS.SHOW_WALLET_UI,\n      params: [],\n    });\n  }\n\n  async showCheckout(): Promise<void> {\n    this.communicationProvider.displayIframe({ isFull: true });\n    await this.communicationProvider.request<[], boolean>({\n      method: COMMUNICATION_JRPC_METHODS.SHOW_CHECKOUT,\n      params: [],\n    });\n  }\n\n  private async setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.walletIframe.contentWindow,\n      targetOrigin: providerParams.torusUrl,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.walletIframe.contentWindow,\n      targetOrigin: providerParams.torusUrl,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream as unknown as Duplex, {});\n    const communicationProvider = new CommunicationProvider(communicationStream as unknown as Duplex, {}, { buttonPosition: this.buttonPosition });\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.has(_payload.method as METHOD_TYPES_TYPE)) {\n        const windowId = randomId();\n        communicationProvider.handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider.rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = ((payload: UnValidatedJsonRpcRequest, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.has(_payload.method)) {\n        const windowId = randomId();\n        communicationProvider.handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider.rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    }) as (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m: keyof TorusInPageProvider) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"eth_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return (originalMethod as (request: unknown, cb: unknown) => void).apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to eth_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    log.info(\"test setupWeb3 \");\n    await Promise.all([\n      inPageProvider.initializeState(),\n      communicationProvider.initializeState({\n        ...providerParams,\n        torusIframe: this.walletIframe,\n      }),\n    ]);\n    log.debug(\"WsEmbed - injected provider\");\n  }\n}\n\nexport default WsEmbed;\n","export { default } from \"./embed\";\nexport { default as TorusInPageProvider } from \"./inPageProvider\";\nexport * from \"./interfaces\";\n"],"names":["isStream","stream","pipe","isWritableStream","writable","_write","_writableState","isReadableStream","readable","_read","_readableState","isDuplexStream","errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","loglevel","getLogger","rpcErrors","log","createErrorMiddleware","req","res","next","error","invalidRequest","message","data","_objectSpread","cause","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","NOOP","EMITTED_NOTIFICATIONS","createLoggerMiddleware","createIdRemapMiddleware","createStreamMiddleware","getRpcPromiseCallback","JRPCEngine","ObjectMultiplex","SafeEventEmitter","pump","messages","BaseProvider","constructor","connectionStream","_ref","jsonRpcStreamName","_defineProperty","Error","isWeb3Auth","setMaxListeners","handleConnect","bind","handleDisconnect","handleStreamDisconnect","rpcRequest","initializeState","request","sendAsync","send","mux","ignoreStream","jsonRpcConnection","createStream","rpcEngine","push","origin","location","middleware","jsonRpcConnectionEvents","events","args","Array","isArray","params","length","undefined","Promise","resolve","reject","payload","callback","streamName","WS_EMBED_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","FEATURES_DEFAULT_POPUP_WINDOW","getPopupFeatures","PopupHandler","url","target","features","timeout","window","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","open","_this$window","href","focus","close","redirect","locationReplaceOnRedirect","replace","EthereumProviderError","COMMUNICATION_JRPC_METHODS","COMMUNICATION_NOTIFICATIONS","CommunicationProvider","state","defaultState","iframeUrl","windowRefs","Map","on","isConnected","notificationHandler","IFRAME_STATUS","isFullScreen","rid","displayIframe","isFull","CLOSE_WINDOW","handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusUrl","torusIframe","iframe","addEventListener","GET_PROVIDER_STATE","initialized","hideTorusButton","widgetVisibility","showTorusButton","arguments","style","display","height","width","buttonPosition","top","left","right","bottom","Object","assign","handleWindow","windowId","finalUrl","URL","handledWindow","WINDOW_BLOCKED","set","OPENED_WINDOW","once","delete","CLOSED_WINDOW","cb","_payload","jsonrpc","handle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","has","get","hasEmittedConnection","handleEvent","eventName","handler","_len","handlerArgs","_key","handlerWrapper","removeEventListener","htmlToElement","html","template","document","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","dequal","TorusInPageProvider","selectedAddress","handleAccountsChanged","handleChainChanged","handleUnlockStateChanged","jsonRpcNotificationHandler","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","includes","result","type","accounts","isUnlocked","isInternal","err","tryWindowHandle","isEthAccounts","finalAccounts","account","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","FEATURES_CONFIRM_WINDOW","FEATURES_PROVIDER_CHANGE_WINDOW","randomId","METHOD_TYPES","BasePostMessageStream","WALLET_URLS_DEFAULT","logLevel","preLoadIframe","torusIframeHtml","production","crossOrigin","rel","relList","supports","head","appendChild","COMMUNICATION_UNSAFE_METHODS","Set","SET_PROVIDER","PROVIDER_UNSAFE_METHODS","ETH_DECRYPT","ETH_GET_ENCRYPTION_PUBLIC_KEY","ETH_SIGN","ETH_SIGN_TYPED_DATA","ETH_SIGN_TYPED_DATA_V3","ETH_SIGN_TYPED_DATA_V4","PERSONAL_SIGN","ETH_TRANSACTION","ADD_CHAIN","SWITCH_CHAIN","WsEmbed","modalZIndex","isInitialized","init","buildEnv","enableLogging","chainConfig","showWidgetButton","walletUrls","setDefaultLevel","enableAll","disableAll","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","hash","toString","walletIframe","body","dappMetadata","contentWindow","postMessage","setupWeb3","login","loginProvider","communicationProvider","provider","login_hint","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","remove","getUserInfo","userInfoResponse","USER_INFO","showWalletConnectScanner","SHOW_WALLET_CONNECT","showWalletUi","SHOW_WALLET_UI","showCheckout","SHOW_CHECKOUT","providerParams","providerStream","targetWindow","targetOrigin","communicationStream","inPageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","default"],"sourceRoot":""}