{"version":3,"file":"embed.esm.js","sources":["../src/isStream.ts","../src/messages.ts","../src/loglevel.ts","../src/utils.ts","../src/baseProvider.ts","../src/interfaces.ts","../src/PopupHandler.ts","../src/communicationProvider.ts","../src/embedUtils.ts","../src/inPageProvider.ts","../src/siteMetadata.ts","../src/embed.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function isStream(stream: any) {\n  return stream !== null && typeof stream === \"object\" && typeof stream.pipe === \"function\";\n}\n\nexport function isWritableStream(stream: any) {\n  return isStream(stream) && stream.writable !== false && typeof stream._write === \"function\" && typeof stream._writableState === \"object\";\n}\n\nexport function isReadableStream(stream: any) {\n  return isStream(stream) && stream.readable !== false && typeof stream._read === \"function\" && typeof stream._readableState === \"object\";\n}\n\nexport function isDuplexStream(stream: any) {\n  return isWritableStream(stream) && isReadableStream(stream);\n}\n","export default {\n  errors: {\n    disconnected: (): string => \"Web3Auth: Lost connection to Web3Auth.\",\n    permanentlyDisconnected: (): string => \"Web3Auth: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Web3Auth: The Web3Auth Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Web3Auth: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"ws-embed\");\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: { ...(req || {}), cause: `The request 'method' must be a non-empty string.` },\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Ws-Embed - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Web3Auth: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { createLoggerMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  RequestArguments,\n  SafeEventEmitter,\n  SafeEventEmitterProvider,\n  SendCallBack,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport { isDuplexStream } from \"./isStream\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  /**\n   * Indicating that this provider is a Web3Auth provider.\n   */\n  public readonly isWeb3Auth: true;\n\n  protected state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isWeb3Auth = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this.handleConnect = this.handleConnect.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.handleStreamDisconnect = this.handleStreamDisconnect.bind(this);\n\n    this.rpcRequest = this.rpcRequest.bind(this);\n    this.initializeState = this.initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.send = this.send.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this.handleStreamDisconnect.bind(this, \"Web3Auth\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this.handleStreamDisconnect.bind(this, \"Web3Auth RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this.rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T, P>(args: RequestArguments<T>): Promise<Maybe<P>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this.rpcRequest({ method, params }, getRpcPromiseCallback(resolve as (value?: unknown) => void, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this.rpcRequest(payload, callback as (...args: unknown[]) => void);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this.rpcRequest(payload, getRpcPromiseCallback(resolve as (value?: unknown) => void, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits InpageProvider#disconnect\n   */\n  protected handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this.handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits InPageProvider#connect\n   */\n  protected abstract handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits InpageProvider#disconnect\n   */\n  protected abstract handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","import type { EthereumProviderConfig } from \"@toruslabs/ethereum-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { LogLevelDesc } from \"loglevel\";\n\nexport const WS_EMBED_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type WS_EMBED_BUILD_ENV_TYPE = (typeof WS_EMBED_BUILD_ENV)[keyof typeof WS_EMBED_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = (typeof LOGIN_PROVIDER)[keyof typeof LOGIN_PROVIDER];\n\nexport interface CtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface WalletUrlConfig {\n  url?: string;\n  logLevel?: LogLevelDesc;\n}\nexport interface WsEmbedParams {\n  /**\n   * Determines where the wsEmbed widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Chain to connect with\n   */\n  chainConfig?: EthereumProviderConfig;\n  /**\n   * Build Environment of WsEmbed.\n   *\n   * production uses https://casper.tor.us,\n   *\n   * development uses http://localhost:4050 (expects wallet-service-website to be run locally),\n   *\n   * testing uses https://casper-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: WS_EMBED_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide ws-embed widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showWidgetButton?: boolean;\n  /**\n   * whether to show/hide ws-embed widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  walletUrls?: Partial<Record<WS_EMBED_BUILD_ENV_TYPE, WalletUrlConfig>>;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  widgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n","import { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"@toruslabs/base-controllers\";\nimport { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: URL; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { EthereumProviderError } from \"@metamask/rpc-errors\";\nimport { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, RequestArguments } from \"@toruslabs/openlogin-jrpc\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { BUTTON_POSITION, CommunicationProviderState, LOGIN_PROVIDER_TYPE, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param  opts - An options bag\n */\nclass CommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    widgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  public windowRefs: Map<string, PopupHandler>;\n\n  public iframeUrl: string;\n\n  private iframe: HTMLIFrameElement;\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions,\n    state: Partial<CommunicationProviderState>\n  ) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this.state = {\n      ...CommunicationProvider.defaultState,\n      ...state,\n    };\n\n    // public state\n    this.iframeUrl = \"\";\n    this.windowRefs = new Map();\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this.state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<unknown>) => {\n      const { method, params } = payload;\n      // create_window should never come here..\n      // we either pre-open from embed.\n      // if it's blocked, we communicate down that it's blocked and we show full screen iframe and open from iframe\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params as Record<string, unknown>;\n        this.displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this.handleCloseWindow(params as Record<string, unknown>);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params as Record<string, unknown>;\n        this.state.isLoggedIn = true;\n        this.state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this.state.isLoggedIn = false;\n        this.state.currentLoginProvider = null;\n        this.displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this.state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this.state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this.state.isConnected;\n  }\n\n  async initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, torusIframe } = params;\n      this.iframeUrl = torusUrl as string;\n      this.iframe = torusIframe as HTMLIFrameElement;\n      this.iframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this.state.isIFrameFullScreen) this.displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Web3Auth: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this.state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  hideTorusButton(): void {\n    this.state.widgetVisibility = false;\n    this.displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.state.widgetVisibility = true;\n    this.displayIframe();\n  }\n\n  public displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this.state.widgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this.state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.iframe.style, style);\n    this.state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid?: string }, void>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  public async handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): Promise<void> {\n    const finalUrl = new URL(url || `${this.iframeUrl}/redirect?windowId=${windowId}`);\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    await handledWindow.open();\n    if (!handledWindow.window) {\n      this.displayIframe({ isFull: true });\n      this.request<{ windowId: string; finalUrl: string }, void>({\n        method: COMMUNICATION_JRPC_METHODS.WINDOW_BLOCKED,\n        params: { windowId, finalUrl: finalUrl.href },\n      });\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs.set(windowId, handledWindow);\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, void>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      this.windowRefs.delete(windowId);\n      this.request<{ windowId: string }, void>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this.state.isConnected) {\n      this.state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this.state.isConnected || (!this.state.isPermanentlyDisconnected && !isRecoverable)) {\n      this.state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.state.currentLoginProvider = null;\n        this.state.isLoggedIn = false;\n        this.state.widgetVisibility = false;\n        this.state.isIFrameFullScreen = false;\n        this.state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  private handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs.has(windowId)) {\n      this.windowRefs.get(windowId).close();\n      this.windowRefs.delete(windowId);\n    }\n  }\n}\n\nexport default CommunicationProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\nimport { EthereumProviderError } from \"@metamask/rpc-errors\";\nimport { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess, RequestArguments } from \"@toruslabs/openlogin-jrpc\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { EMITTED_NOTIFICATIONS } from \"./utils\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected EVM chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected EVM address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this.state = {\n      ...TorusInPageProvider.defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleUnlockStateChanged = this.handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this.state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this.handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this.handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this.handleChainChanged(params as Record<string, unknown>);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit(\"data\", payload);\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this.state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this.handleChainChanged({ chainId });\n      this.handleUnlockStateChanged({ accounts, isUnlocked });\n      this.handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"WsEmbed: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this.state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this.handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this.rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected handleConnect(chainId: string): void {\n    if (!this.state.isConnected) {\n      this.state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this.state.isConnected || (!this.state.isPermanentlyDisconnected && !isRecoverable)) {\n      this.state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this.state.accounts = null;\n        this.selectedAddress = null;\n        this.state.isUnlocked = false;\n        this.state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"WsEmbed: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"WsEmbed: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this.state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this.state.accounts) && this.state.accounts.length > 0 && !isInternal) {\n        log.error('WsEmbed: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this.state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"WsEmbed: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this.handleDisconnect(true);\n    } else {\n      this.handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this.state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"WsEmbed: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this.state.isUnlocked) {\n      this.state.isUnlocked = isUnlocked;\n      this.handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import {\n  COMMUNICATION_JRPC_METHODS,\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  randomId,\n} from \"@toruslabs/base-controllers\";\nimport { METHOD_TYPES, METHOD_TYPES_TYPE } from \"@toruslabs/ethereum-controllers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { Duplex } from \"readable-stream\";\n\nimport CommunicationProvider from \"./communicationProvider\";\nimport { htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  CtorArgs,\n  LOGIN_PROVIDER_TYPE,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WalletUrlConfig,\n  WS_EMBED_BUILD_ENV,\n  WS_EMBED_BUILD_ENV_TYPE,\n  WsEmbedParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport getSiteMetadata from \"./siteMetadata\";\n\nconst WALLET_URLS_DEFAULT: Record<WS_EMBED_BUILD_ENV_TYPE, WalletUrlConfig> = {\n  [WS_EMBED_BUILD_ENV.TESTING]: {\n    url: \"https://lrc-wallet.web3auth.io\",\n    logLevel: \"debug\",\n  },\n  [WS_EMBED_BUILD_ENV.DEVELOPMENT]: {\n    url: \"http://localhost:4050\",\n    logLevel: \"debug\",\n  },\n  [WS_EMBED_BUILD_ENV.PRODUCTION]: {\n    url: \"https://wallet.web3auth.io\",\n    logLevel: \"error\",\n  },\n};\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { url: torusUrl } = WALLET_URLS_DEFAULT.production;\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nexport const COMMUNICATION_UNSAFE_METHODS = new Set([COMMUNICATION_JRPC_METHODS.SET_PROVIDER]) as Set<\n  Partial<(typeof COMMUNICATION_JRPC_METHODS)[keyof typeof COMMUNICATION_JRPC_METHODS]>\n>;\n\nexport const PROVIDER_UNSAFE_METHODS = new Set([\n  METHOD_TYPES.ETH_DECRYPT,\n  METHOD_TYPES.ETH_GET_ENCRYPTION_PUBLIC_KEY,\n  METHOD_TYPES.ETH_SIGN,\n  METHOD_TYPES.ETH_SIGN_TYPED_DATA,\n  METHOD_TYPES.ETH_SIGN_TYPED_DATA_V3,\n  METHOD_TYPES.ETH_SIGN_TYPED_DATA_V4,\n  METHOD_TYPES.PERSONAL_SIGN,\n  METHOD_TYPES.ETH_TRANSACTION,\n  METHOD_TYPES.ADD_CHAIN,\n  METHOD_TYPES.SWITCH_CHAIN,\n]) as Set<Partial<METHOD_TYPES_TYPE>>;\n\nclass WsEmbed {\n  isInitialized: boolean;\n\n  modalZIndex: number;\n\n  provider: TorusInPageProvider;\n\n  widgetVisibility: boolean;\n\n  communicationProvider: CommunicationProvider;\n\n  buttonPosition: BUTTON_POSITION_TYPE;\n\n  private walletIframe: HTMLIFrameElement;\n\n  constructor({ modalZIndex = 99999 }: CtorArgs = {}) {\n    this.isInitialized = false; // init done\n    this.modalZIndex = modalZIndex;\n  }\n\n  async init({\n    buildEnv = WS_EMBED_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    chainConfig,\n    showWidgetButton: showTorusButton = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    walletUrls,\n  }: WsEmbedParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { url: torusUrl, logLevel } =\n      walletUrls && walletUrls[buildEnv] ? { ...WALLET_URLS_DEFAULT[buildEnv], ...walletUrls[buildEnv] } : WALLET_URLS_DEFAULT[buildEnv];\n    log.info(torusUrl, \"url loaded\");\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n    // sandbox=\"allow-popups allow-scripts allow-same-origin\"\n    // Iframe code\n    this.walletIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"walletIframe\"\n        class=\"walletIframe\"\n        sandbox=\"allow-popups allow-scripts allow-same-origin allow-forms\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.buttonPosition = buttonPosition;\n\n    return new Promise<void>((resolve, reject) => {\n      try {\n        window.document.body.appendChild(this.walletIframe);\n        this.walletIframe.addEventListener(\"load\", async () => {\n          const dappMetadata = await getSiteMetadata();\n          // send init params here\n          this.walletIframe.contentWindow.postMessage(\n            {\n              buttonPosition,\n              chainConfig,\n              dappMetadata,\n              enableLogging,\n            },\n            torusIframeUrl.origin\n          );\n          await this.setupWeb3({\n            torusUrl,\n          });\n          // if (showTorusButton) this.showTorusButton();\n          // else this.hideTorusButton();\n          this.widgetVisibility = showTorusButton;\n          this.isInitialized = true;\n          resolve();\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async login(params: { loginProvider?: LOGIN_PROVIDER_TYPE; login_hint?: string } = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      if (!params.loginProvider) {\n        this.communicationProvider.displayIframe({ isFull: true });\n      }\n\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider.rpcRequest(\n          { method: \"eth_requestAccounts\", params: [params.loginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve as (value?: unknown) => void, reject) as (...args: unknown[]) => void\n        );\n      });\n      log.info(\"check: res\", res);\n\n      if (Array.isArray(res) && res.length > 0) {\n        if (this.widgetVisibility) this.showTorusButton();\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      this.communicationProvider.displayIframe({ isFull: false });\n    }\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n\n    this.hideTorusButton();\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.walletIframe) && window.document.body.contains(this.walletIframe)) {\n      this.walletIframe.remove();\n      this.walletIframe = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    this.communicationProvider.displayIframe({ isFull: true });\n    await this.communicationProvider.request<[], boolean>({\n      method: COMMUNICATION_JRPC_METHODS.SHOW_WALLET_CONNECT,\n      params: [],\n    });\n  }\n\n  async showWalletUi(): Promise<void> {\n    this.communicationProvider.displayIframe({ isFull: true });\n    await this.communicationProvider.request<[], boolean>({\n      method: COMMUNICATION_JRPC_METHODS.SHOW_WALLET_UI,\n      params: [],\n    });\n  }\n\n  async showCheckout(): Promise<void> {\n    this.communicationProvider.displayIframe({ isFull: true });\n    await this.communicationProvider.request<[], boolean>({\n      method: COMMUNICATION_JRPC_METHODS.SHOW_CHECKOUT,\n      params: [],\n    });\n  }\n\n  private async setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.walletIframe.contentWindow,\n      targetOrigin: providerParams.torusUrl,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.walletIframe.contentWindow,\n      targetOrigin: providerParams.torusUrl,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream as unknown as Duplex, {});\n    const communicationProvider = new CommunicationProvider(communicationStream as unknown as Duplex, {}, { buttonPosition: this.buttonPosition });\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.has(_payload.method as METHOD_TYPES_TYPE)) {\n        const windowId = randomId();\n        communicationProvider.handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider.rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = ((payload: UnValidatedJsonRpcRequest, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.has(_payload.method)) {\n        const windowId = randomId();\n        communicationProvider.handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider.rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    }) as (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m: keyof TorusInPageProvider) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"eth_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return (originalMethod as (request: unknown, cb: unknown) => void).apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to eth_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    log.info(\"test setupWeb3 \");\n    await Promise.all([\n      inPageProvider.initializeState(),\n      communicationProvider.initializeState({\n        ...providerParams,\n        torusIframe: this.walletIframe,\n      }),\n    ]);\n    log.debug(\"WsEmbed - injected provider\");\n  }\n}\n\nexport default WsEmbed;\n"],"names":["isStream","stream","pipe","isWritableStream","writable","_write","_writableState","isReadableStream","readable","_read","_readableState","isDuplexStream","errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","loglevel","getLogger","createErrorMiddleware","req","res","next","error","rpcErrors","invalidRequest","message","data","_objectSpread","cause","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","EMITTED_NOTIFICATIONS","BaseProvider","SafeEventEmitter","constructor","connectionStream","_ref","jsonRpcStreamName","_defineProperty","Error","messages","isWeb3Auth","setMaxListeners","handleConnect","bind","handleDisconnect","handleStreamDisconnect","rpcRequest","initializeState","request","sendAsync","send","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","createLoggerMiddleware","origin","location","middleware","jsonRpcConnectionEvents","events","args","Array","isArray","params","length","undefined","Promise","resolve","reject","getRpcPromiseCallback","payload","callback","streamName","WS_EMBED_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","PopupHandler","url","target","features","timeout","getPopupFeatures","FEATURES_DEFAULT_POPUP_WINDOW","window","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","open","_this$window","href","focus","close","redirect","locationReplaceOnRedirect","replace","CommunicationProvider","state","defaultState","iframeUrl","windowRefs","Map","on","isConnected","notificationHandler","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","displayIframe","isFull","CLOSE_WINDOW","handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusUrl","torusIframe","iframe","addEventListener","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","initialized","hideTorusButton","widgetVisibility","showTorusButton","arguments","style","display","height","width","buttonPosition","top","left","right","bottom","Object","assign","handleWindow","windowId","finalUrl","URL","handledWindow","WINDOW_BLOCKED","set","OPENED_WINDOW","once","delete","CLOSED_WINDOW","cb","_payload","jsonrpc","handle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumProviderError","has","get","hasEmittedConnection","htmlToElement","html","template","document","createElement","trimmedHtml","trim","innerHTML","content","firstChild","TorusInPageProvider","selectedAddress","handleAccountsChanged","handleChainChanged","handleUnlockStateChanged","jsonRpcNotificationHandler","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","includes","result","type","accounts","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","err","tryWindowHandle","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","WALLET_URLS_DEFAULT","logLevel","preLoadIframe","torusIframeHtml","production","crossOrigin","rel","relList","supports","head","appendChild","COMMUNICATION_UNSAFE_METHODS","Set","SET_PROVIDER","PROVIDER_UNSAFE_METHODS","METHOD_TYPES","ETH_DECRYPT","ETH_GET_ENCRYPTION_PUBLIC_KEY","ETH_SIGN","ETH_SIGN_TYPED_DATA","ETH_SIGN_TYPED_DATA_V3","ETH_SIGN_TYPED_DATA_V4","PERSONAL_SIGN","ETH_TRANSACTION","ADD_CHAIN","SWITCH_CHAIN","WsEmbed","modalZIndex","isInitialized","init","buildEnv","enableLogging","chainConfig","showWidgetButton","walletUrls","setDefaultLevel","enableAll","disableAll","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","hash","toString","walletIframe","body","dappMetadata","contentWindow","postMessage","setupWeb3","login","loginProvider","communicationProvider","provider","login_hint","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","remove","getUserInfo","userInfoResponse","USER_INFO","showWalletConnectScanner","SHOW_WALLET_CONNECT","showWalletUi","SHOW_WALLET_UI","showCheckout","SHOW_CHECKOUT","providerParams","providerStream","BasePostMessageStream","targetWindow","targetOrigin","communicationStream","inPageProvider","randomId","FEATURES_CONFIRM_WINDOW","FEATURES_PROVIDER_CHANGE_WINDOW","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all"],"mappings":";;;;;;;;;;AAAA;AACO,SAASA,QAAQA,CAACC,MAAW,EAAE;AACpC,EAAA,OAAOA,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,CAACC,IAAI,KAAK,UAAU,CAAA;AAC3F,CAAA;AAEO,SAASC,gBAAgBA,CAACF,MAAW,EAAE;EAC5C,OAAOD,QAAQ,CAACC,MAAM,CAAC,IAAIA,MAAM,CAACG,QAAQ,KAAK,KAAK,IAAI,OAAOH,MAAM,CAACI,MAAM,KAAK,UAAU,IAAI,OAAOJ,MAAM,CAACK,cAAc,KAAK,QAAQ,CAAA;AAC1I,CAAA;AAEO,SAASC,gBAAgBA,CAACN,MAAW,EAAE;EAC5C,OAAOD,QAAQ,CAACC,MAAM,CAAC,IAAIA,MAAM,CAACO,QAAQ,KAAK,KAAK,IAAI,OAAOP,MAAM,CAACQ,KAAK,KAAK,UAAU,IAAI,OAAOR,MAAM,CAACS,cAAc,KAAK,QAAQ,CAAA;AACzI,CAAA;AAEO,SAASC,cAAcA,CAACV,MAAW,EAAE;EAC1C,OAAOE,gBAAgB,CAACF,MAAM,CAAC,IAAIM,gBAAgB,CAACN,MAAM,CAAC,CAAA;AAC7D;;ACfA,eAAe;AACbW,EAAAA,MAAM,EAAE;IACNC,YAAY,EAAEA,MAAc,wCAAwC;IACpEC,uBAAuB,EAAEA,MAAc,2DAA2D;AAClGC,IAAAA,eAAe,EAAGC,MAAc,IAC7B,CAAA,mFAAA,EAAqFA,MAAO,CAA+B,8BAAA,CAAA;IAC9HC,mBAAmB,EAAEA,MAAc,6CAA6C;AAChFC,IAAAA,cAAc,EAAGC,iBAAyB,IAAc,CAAA,gDAAA,EAAkDA,iBAAkB,CAAE,CAAA,CAAA;IAC9HC,kBAAkB,EAAEA,MAAe,CAA+C,8CAAA,CAAA;IAClFC,oBAAoB,EAAEA,MAAe,CAA0C,yCAAA,CAAA;IAC/EC,oBAAoB,EAAEA,MAAe,CAAsD,qDAAA,CAAA;IAC3FC,mBAAmB,EAAEA,MAAe,CAA6C,4CAAA,CAAA;AACjFC,IAAAA,mBAAmB,EAAGR,MAAc,IAAc,CAAA,4CAAA,EAA8CA,MAAO,CAAA,EAAA,CAAA;GACxG;AACDS,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAGC,OAAe,IAAc,CAAA,sCAAA,EAAwCA,OAAQ,CAAA,EAAA,CAAA;GAC1F;AACDC,EAAAA,QAAQ,EAAE,EAAC;AACb,CAAC;;AChBD,UAAeC,QAAQ,CAACC,SAAS,CAAC,UAAU,CAAC;;ACG7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqBA,GAAqC;AACxE,EAAA,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;AACzB;IACA,IAAI,OAAOF,GAAG,CAAChB,MAAM,KAAK,QAAQ,IAAI,CAACgB,GAAG,CAAChB,MAAM,EAAE;AACjDiB,MAAAA,GAAG,CAACE,KAAK,GAAGC,SAAS,CAACC,cAAc,CAAC;AACnCC,QAAAA,OAAO,EAAG,CAAiD,gDAAA,CAAA;QAC3DC,IAAI,EAAAC,aAAA,CAAAA,aAAA,KAAQR,GAAG,IAAI,EAAE,CAAA,EAAA,EAAA,EAAA;AAAGS,UAAAA,KAAK,EAAG,CAAA,gDAAA,CAAA;AAAiD,SAAA,CAAA;AACnF,OAAC,CAAC,CAAA;AACJ,KAAA;IAEAP,IAAI,CAAEQ,IAAI,IAAK;MACb,MAAM;AAAEP,QAAAA,KAAAA;AAAM,OAAC,GAAGF,GAAG,CAAA;MACrB,IAAI,CAACE,KAAK,EAAE;QACV,OAAOO,IAAI,EAAE,CAAA;AACf,OAAA;MACAC,GAAG,CAACR,KAAK,CAAE,CAAwBA,sBAAAA,EAAAA,KAAK,CAACG,OAAQ,CAAA,CAAC,EAAEH,KAAK,CAAC,CAAA;MAC1D,OAAOO,IAAI,EAAE,CAAA;AACf,KAAC,CAAC,CAAA;GACH,CAAA;AACH,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,0BAA0BA,CAACC,WAAmB,EAAEV,KAAY,EAAEW,OAAyB,EAAQ;AAC7G,EAAA,IAAIC,UAAU,GAAI,CAAgCF,8BAAAA,EAAAA,WAAY,CAAG,EAAA,CAAA,CAAA;AACjE,EAAA,IAAIV,KAAK,KAALA,IAAAA,IAAAA,KAAK,eAALA,KAAK,CAAEa,KAAK,EAAE;AAChBD,IAAAA,UAAU,IAAK,CAAA,EAAA,EAAIZ,KAAK,CAACa,KAAM,CAAC,CAAA,CAAA;AAClC,GAAA;AACAL,EAAAA,GAAG,CAACM,IAAI,CAACF,UAAU,CAAC,CAAA;EACpB,IAAID,OAAO,IAAIA,OAAO,CAACI,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACjDJ,IAAAA,OAAO,CAACK,IAAI,CAAC,OAAO,EAAEJ,UAAU,CAAC,CAAA;AACnC,GAAA;AACF,CAAA;AAMO,MAAMK,qBAAqB,GAAG,CACnC,kBAAkB;AAAE,CACrB;;ACpCD;AACA;AACA;AACA;AACA,MAAeC,YAAY,SAAsCC,gBAAgB,CAAqC;AAYpHC,EAAAA,WAAWA,CAACC,gBAAwB,EAAAC,IAAA,EAAgF;IAAA,IAA9E;AAAEtC,MAAAA,iBAAiB,GAAG,GAAG;AAAEuC,MAAAA,iBAAiB,GAAG,UAAA;AAA4B,KAAC,GAAAD,IAAA,CAAA;AAChH,IAAA,KAAK,EAAE,CAAA;IAACE,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,yBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AARV;AACF;AACA;IAFEA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AASE,IAAA,IAAI,CAAChD,cAAc,CAAC6C,gBAAgB,CAAC,EAAE;MACrC,MAAM,IAAII,KAAK,CAACC,QAAQ,CAACjD,MAAM,CAACK,mBAAmB,EAAE,CAAC,CAAA;AACxD,KAAA;IACA,IAAI,CAAC6C,UAAU,GAAG,IAAI,CAAA;AACtB,IAAA,IAAI,CAACC,eAAe,CAAC5C,iBAAiB,CAAC,CAAA;IAEvC,IAAI,CAAC6C,aAAa,GAAG,IAAI,CAACA,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAAA;IAClD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,CAAC,CAAA;IACxD,IAAI,CAACE,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACF,IAAI,CAAC,IAAI,CAAC,CAAA;IAEpE,IAAI,CAACG,UAAU,GAAG,IAAI,CAACA,UAAU,CAACH,IAAI,CAAC,IAAI,CAAC,CAAA;IAC5C,IAAI,CAACI,eAAe,GAAG,IAAI,CAACA,eAAe,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAA;IAEtD,IAAI,CAACK,OAAO,GAAG,IAAI,CAACA,OAAO,CAACL,IAAI,CAAC,IAAI,CAAC,CAAA;IACtC,IAAI,CAACM,SAAS,GAAG,IAAI,CAACA,SAAS,CAACN,IAAI,CAAC,IAAI,CAAC,CAAA;IAC1C,IAAI,CAACO,IAAI,GAAG,IAAI,CAACA,IAAI,CAACP,IAAI,CAAC,IAAI,CAAC,CAAA;AAChC;;AAEA;AACA,IAAA,MAAMQ,GAAG,GAAG,IAAIC,eAAe,EAAE,CAAA;AACjCC,IAAAA,IAAI,CACFnB,gBAAgB,EAChBiB,GAAG,EACHjB,gBAAgB,EAChB,IAAI,CAACW,sBAAsB,CAACF,IAAI,CAAC,IAAI,EAAE,UAAU,CACnD,CAAC,CAAA;;AAED;AACAQ,IAAAA,GAAG,CAACG,YAAY,CAAC,UAAU,CAAC,CAAA;;AAE5B;AACA;;AAEA,IAAA,MAAMC,iBAAiB,GAAGC,sBAAsB,EAAE,CAAA;IAClDH,IAAI,CACFE,iBAAiB,CAAC5E,MAAM,EACxBwE,GAAG,CAACM,YAAY,CAACrB,iBAAiB,CAAC,EACnCmB,iBAAiB,CAAC5E,MAAM,EACxB,IAAI,CAACkE,sBAAsB,CAACF,IAAI,CAAC,IAAI,EAAE,sBAAsB,CAC/D,CAAC,CAAA;;AAED;AACA,IAAA,MAAMe,SAAS,GAAG,IAAIC,UAAU,EAAE,CAAA;AAClCD,IAAAA,SAAS,CAACE,IAAI,CAACC,uBAAuB,EAAE,CAAC,CAAA;AACzCH,IAAAA,SAAS,CAACE,IAAI,CAACnD,qBAAqB,EAAE,CAAC,CAAA;AACvCiD,IAAAA,SAAS,CAACE,IAAI,CAACE,sBAAsB,CAAC;MAAEC,MAAM,EAAEC,QAAQ,CAACD,MAAAA;AAAO,KAAC,CAAC,CAAC,CAAA;AACnEL,IAAAA,SAAS,CAACE,IAAI,CAACL,iBAAiB,CAACU,UAAU,CAAC,CAAA;IAC5C,IAAI,CAACP,SAAS,GAAGA,SAAS,CAAA;AAE1B,IAAA,IAAI,CAACQ,uBAAuB,GAAGX,iBAAiB,CAACY,MAAM,CAAA;AACzD,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMnB,OAAOA,CAAOoB,IAAyB,EAAqB;AAChE,IAAA,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MAC5D,MAAMtD,SAAS,CAACC,cAAc,CAAC;AAC7BC,QAAAA,OAAO,EAAEuB,QAAQ,CAACjD,MAAM,CAACQ,kBAAkB,EAAE;QAC7CmB,IAAI,EAAAC,aAAA,CAAAA,aAAA,KAAQkD,IAAI,IAAI,EAAE,CAAA,EAAA,EAAA,EAAA;AAAGjD,UAAAA,KAAK,EAAEoB,QAAQ,CAACjD,MAAM,CAACQ,kBAAkB,EAAC;AAAC,SAAA,CAAA;AACtE,OAAC,CAAC,CAAA;AACJ,KAAA;IAEA,MAAM;MAAEJ,MAAM;AAAE6E,MAAAA,MAAAA;AAAO,KAAC,GAAGH,IAAI,CAAA;IAE/B,IAAI,OAAO1E,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAAC8E,MAAM,KAAK,CAAC,EAAE;MACrD,MAAM1D,SAAS,CAACC,cAAc,CAAC;AAC7BC,QAAAA,OAAO,EAAEuB,QAAQ,CAACjD,MAAM,CAACS,oBAAoB,EAAE;QAC/CkB,IAAI,EAAAC,aAAA,CAAAA,aAAA,KAAQkD,IAAI,IAAI,EAAE,CAAA,EAAA,EAAA,EAAA;AAAGjD,UAAAA,KAAK,EAAEoB,QAAQ,CAACjD,MAAM,CAACQ,kBAAkB,EAAC;AAAC,SAAA,CAAA;AACtE,OAAC,CAAC,CAAA;AACJ,KAAA;IAEA,IAAIyE,MAAM,KAAKE,SAAS,IAAI,CAACJ,KAAK,CAACC,OAAO,CAACC,MAAM,CAAC,KAAK,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI,CAAC,EAAE;MACrG,MAAMzD,SAAS,CAACC,cAAc,CAAC;AAC7BC,QAAAA,OAAO,EAAEuB,QAAQ,CAACjD,MAAM,CAACU,oBAAoB,EAAE;QAC/CiB,IAAI,EAAAC,aAAA,CAAAA,aAAA,KAAQkD,IAAI,IAAI,EAAE,CAAA,EAAA,EAAA,EAAA;AAAGjD,UAAAA,KAAK,EAAEoB,QAAQ,CAACjD,MAAM,CAACQ,kBAAkB,EAAC;AAAC,SAAA,CAAA;AACtE,OAAC,CAAC,CAAA;AACJ,KAAA;AAEA,IAAA,OAAO,IAAI4E,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAAC9B,UAAU,CAAC;QAAEpD,MAAM;AAAE6E,QAAAA,MAAAA;AAAO,OAAC,EAAEM,qBAAqB,CAACF,OAAO,EAA+BC,MAAM,CAAiC,CAAC,CAAA;AAC1I,KAAC,CAAC,CAAA;AACJ,GAAA;AAIA;AACF;AACA;AACA;AACA;AACA;AACE1B,EAAAA,IAAIA,CAAC4B,OAA6B,EAAEC,QAAuE,EAAQ;AACjH,IAAA,IAAI,CAACjC,UAAU,CAACgC,OAAO,EAAEC,QAAwC,CAAC,CAAA;AACpE,GAAA;AAIA;AACF;AACA;AACA;AACA;AACA;EACE9B,SAASA,CAAC6B,OAA6B,EAAoB;AACzD,IAAA,OAAO,IAAIJ,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAAC9B,UAAU,CAACgC,OAAO,EAAED,qBAAqB,CAACF,OAAO,EAA+BC,MAAM,CAAiC,CAAC,CAAA;AAC/H,KAAC,CAAC,CAAA;AACJ,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACY/B,EAAAA,sBAAsBA,CAACmC,UAAkB,EAAEnE,KAAY,EAAQ;AACvES,IAAAA,0BAA0B,CAAC0D,UAAU,EAAEnE,KAAK,EAAE,IAAI,CAAC,CAAA;AACnD,IAAA,IAAI,CAAC+B,gBAAgB,CAAC,KAAK,EAAE/B,KAAK,GAAGA,KAAK,CAACG,OAAO,GAAGyD,SAAS,CAAC,CAAA;AACjE,GAAA;;AAEA;AACA;AACA;AACF;AACA;AACA;AACA;AAGE;AACF;AACA;AACA;AAOE;AACF;AACA;AACA;AACA;AACA;AACA;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AC3MO,MAAMQ,kBAAkB,GAAG;AAChCC,EAAAA,UAAU,EAAE,YAAY;AACxBC,EAAAA,WAAW,EAAE,aAAa;AAC1BC,EAAAA,OAAO,EAAE,SAAA;AACX,EAAU;AAIH,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,WAAW,EAAE,aAAa;AAC1BC,EAAAA,QAAQ,EAAE,UAAU;AACpBC,EAAAA,YAAY,EAAE,cAAc;AAC5BC,EAAAA,SAAS,EAAE,WAAA;AACb,EAAU;AAGH,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,QAAQ,EAAE,UAAU;AACpBC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,OAAO,EAAE,SAAS;AAClBC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,QAAQ,EAAE,UAAU;AACpBC,EAAAA,OAAO,EAAE,SAAS;AAClBC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,kBAAkB,EAAE,oBAAA;AACtB;;AChCA,MAAMC,YAAY,SAASzE,gBAAgB,CAAC;EAe1CC,WAAWA,CAAAE,IAAA,EAAiH;IAAA,IAAhH;MAAEuE,GAAG;MAAEC,MAAM;MAAEC,QAAQ;AAAEC,MAAAA,OAAO,GAAG,KAAA;AAA0E,KAAC,GAAA1E,IAAA,CAAA;AACxH,IAAA,KAAK,EAAE,CAAA;IAACE,eAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IACR,IAAI,CAACqE,GAAG,GAAGA,GAAG,CAAA;AACd,IAAA,IAAI,CAACC,MAAM,GAAGA,MAAM,IAAI,QAAQ,CAAA;IAChC,IAAI,CAACC,QAAQ,GAAGA,QAAQ,IAAIE,gBAAgB,CAACC,6BAA6B,CAAC,CAAA;IAC3E,IAAI,CAACC,MAAM,GAAGvC,SAAS,CAAA;IACvB,IAAI,CAACwC,WAAW,GAAGxC,SAAS,CAAA;IAC5B,IAAI,CAACyC,aAAa,GAAG,KAAK,CAAA;IAC1B,IAAI,CAACL,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAACM,WAAW,EAAE,CAAA;AACpB,GAAA;AAEAA,EAAAA,WAAWA,GAAS;AAClB,IAAA,IAAI,CAACF,WAAW,GAAGG,MAAM,CACvBC,WAAW,CAAC,MAAM;MAChB,IAAI,IAAI,CAACL,MAAM,IAAI,IAAI,CAACA,MAAM,CAACM,MAAM,EAAE;AACrCC,QAAAA,aAAa,CAAC,IAAI,CAACN,WAAW,CAAC,CAAA;AAC/BO,QAAAA,UAAU,CAAC,MAAM;AACf,UAAA,IAAI,CAAC,IAAI,CAACN,aAAa,EAAE;AACvB,YAAA,IAAI,CAACrF,IAAI,CAAC,OAAO,CAAC,CAAA;AACpB,WAAA;UACA,IAAI,CAACqF,aAAa,GAAG,KAAK,CAAA;UAC1B,IAAI,CAACF,MAAM,GAAGvC,SAAS,CAAA;AACzB,SAAC,EAAE,IAAI,CAACoC,OAAO,CAAC,CAAA;AAClB,OAAA;MACA,IAAI,IAAI,CAACG,MAAM,KAAKvC,SAAS,EAAE8C,aAAa,CAAC,IAAI,CAACN,WAAW,CAAC,CAAA;KAC/D,EAAE,GAAG,CACR,CAAC,CAAA;AACH,GAAA;AAEAQ,EAAAA,IAAIA,GAAkB;AAAA,IAAA,IAAAC,YAAA,CAAA;IACpB,IAAI,CAACV,MAAM,GAAGA,MAAM,CAACS,IAAI,CAAC,IAAI,CAACf,GAAG,CAACiB,IAAI,EAAE,IAAI,CAAChB,MAAM,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAA;AACpE,IAAA,IAAA,CAAAc,YAAA,GAAI,IAAI,CAACV,MAAM,MAAA,IAAA,IAAAU,YAAA,KAAXA,KAAAA,CAAAA,IAAAA,YAAA,CAAaE,KAAK,EAAE,IAAI,CAACZ,MAAM,CAACY,KAAK,EAAE,CAAA;AAC3C,IAAA,OAAOlD,OAAO,CAACC,OAAO,EAAE,CAAA;AAC1B,GAAA;AAEAkD,EAAAA,KAAKA,GAAS;IACZ,IAAI,CAACX,aAAa,GAAG,IAAI,CAAA;IACzB,IAAI,IAAI,CAACF,MAAM,EAAE,IAAI,CAACA,MAAM,CAACa,KAAK,EAAE,CAAA;AACtC,GAAA;EAEAC,QAAQA,CAACC,yBAAkC,EAAQ;AACjD,IAAA,IAAIA,yBAAyB,EAAE;MAC7Bf,MAAM,CAAChD,QAAQ,CAACgE,OAAO,CAAC,IAAI,CAACtB,GAAG,CAACiB,IAAI,CAAC,CAAA;AACxC,KAAC,MAAM;MACLX,MAAM,CAAChD,QAAQ,CAAC2D,IAAI,GAAG,IAAI,CAACjB,GAAG,CAACiB,IAAI,CAAA;AACtC,KAAA;AACF,GAAA;AACF;;ACvDA;AACA;AACA;AACA;AACA,MAAMM,qBAAqB,SAASlG,YAAY,CAA6B;AAsB3EE,EAAAA,WAAWA,CACTC,gBAAwB,EAAAC,IAAA,EAExB+F,KAA0C,EAC1C;IAAA,IAFA;AAAErI,MAAAA,iBAAiB,GAAG,GAAG;AAAEuC,MAAAA,iBAAiB,GAAG,UAAA;AAA4B,KAAC,GAAAD,IAAA,CAAA;IAG5E,KAAK,CAACD,gBAAgB,EAAE;MAAErC,iBAAiB;AAAEuC,MAAAA,iBAAAA;AAAkB,KAAC,CAAC,CAAA;;AAEjE;IAAAC,eAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,IAAI,CAAC6F,KAAK,GAAAhH,aAAA,CAAAA,aAAA,CACL+G,EAAAA,EAAAA,qBAAqB,CAACE,YAAY,CAClCD,EAAAA,KAAK,CACT,CAAA;;AAED;IACA,IAAI,CAACE,SAAS,GAAG,EAAE,CAAA;AACnB,IAAA,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,EAAE,CAAA;;AAE3B;;AAEA;AACA,IAAA,IAAI,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;AACvB,MAAA,IAAI,CAACL,KAAK,CAACM,WAAW,GAAG,IAAI,CAAA;AAC/B,KAAC,CAAC,CAAA;IAEF,MAAMC,mBAAmB,GAAI3D,OAAkC,IAAK;MAClE,MAAM;QAAEpF,MAAM;AAAE6E,QAAAA,MAAAA;AAAO,OAAC,GAAGO,OAAO,CAAA;AAClC;AACA;AACA;AACA,MAAA,IAAIpF,MAAM,KAAKgJ,2BAA2B,CAACC,aAAa,EAAE;QACxD,MAAM;UAAEC,YAAY;AAAEC,UAAAA,GAAAA;AAAI,SAAC,GAAGtE,MAAiC,CAAA;QAC/D,IAAI,CAACuE,aAAa,CAAC;AAAEC,UAAAA,MAAM,EAAEH,YAAuB;AAAEC,UAAAA,GAAG,EAAEA,GAAAA;AAAc,SAAC,CAAC,CAAA;AAC7E,OAAC,MAAM,IAAInJ,MAAM,KAAKgJ,2BAA2B,CAACM,YAAY,EAAE;AAC9D,QAAA,IAAI,CAACC,iBAAiB,CAAC1E,MAAiC,CAAC,CAAA;AAC3D,OAAC,MAAM,IAAI7E,MAAM,KAAKgJ,2BAA2B,CAACQ,cAAc,EAAE;QAChE,MAAM;AAAEC,UAAAA,oBAAAA;AAAqB,SAAC,GAAG5E,MAAiC,CAAA;AAClE,QAAA,IAAI,CAAC2D,KAAK,CAACkB,UAAU,GAAG,IAAI,CAAA;AAC5B,QAAA,IAAI,CAAClB,KAAK,CAACiB,oBAAoB,GAAGA,oBAA2C,CAAA;AAC/E,OAAC,MAAM,IAAIzJ,MAAM,KAAKgJ,2BAA2B,CAACW,eAAe,EAAE;AACjE,QAAA,IAAI,CAACnB,KAAK,CAACkB,UAAU,GAAG,KAAK,CAAA;AAC7B,QAAA,IAAI,CAAClB,KAAK,CAACiB,oBAAoB,GAAG,IAAI,CAAA;QACtC,IAAI,CAACL,aAAa,EAAE,CAAA;AACtB,OAAA;KACD,CAAA;IAED,IAAI,CAAC5E,uBAAuB,CAACqE,EAAE,CAAC,cAAc,EAAEE,mBAAmB,CAAC,CAAA;AACtE,GAAA;EAEA,IAAIW,UAAUA,GAAY;AACxB,IAAA,OAAO,IAAI,CAAClB,KAAK,CAACkB,UAAU,CAAA;AAC9B,GAAA;EAEA,IAAIE,kBAAkBA,GAAY;AAChC,IAAA,OAAO,IAAI,CAACpB,KAAK,CAACoB,kBAAkB,CAAA;AACtC,GAAA;;AAEA;AACF;AACA;AACEd,EAAAA,WAAWA,GAAY;AACrB,IAAA,OAAO,IAAI,CAACN,KAAK,CAACM,WAAW,CAAA;AAC/B,GAAA;EAEA,MAAMzF,eAAeA,CAACwB,MAA+B,EAAiB;IACpE,IAAI;MACF,MAAM;QAAEgF,QAAQ;AAAEC,QAAAA,WAAAA;AAAY,OAAC,GAAGjF,MAAM,CAAA;MACxC,IAAI,CAAC6D,SAAS,GAAGmB,QAAkB,CAAA;MACnC,IAAI,CAACE,MAAM,GAAGD,WAAgC,CAAA;AAC9C,MAAA,IAAI,CAACC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;AACzC;QACA,IAAI,CAAC,IAAI,CAACxB,KAAK,CAACoB,kBAAkB,EAAE,IAAI,CAACR,aAAa,EAAE,CAAA;AAC1D,OAAC,CAAC,CAAA;MACF,MAAM;QAAEK,oBAAoB;AAAEC,QAAAA,UAAAA;AAAW,OAAC,GAAI,MAAM,IAAI,CAACpG,OAAO,CAAC;QAC/DtD,MAAM,EAAEiK,0BAA0B,CAACC,kBAAkB;AACrDrF,QAAAA,MAAM,EAAE,EAAA;AACV,OAAC,CAAsC,CAAA;;AAEvC;AACA,MAAA,IAAI,CAAC7B,aAAa,CAACyG,oBAAoB,EAAEC,UAAU,CAAC,CAAA;KACrD,CAAC,OAAOvI,KAAK,EAAE;AACdQ,MAAAA,GAAG,CAACR,KAAK,CAAC,gEAAgE,EAAEA,KAAK,CAAC,CAAA;AACpF,KAAC,SAAS;AACRQ,MAAAA,GAAG,CAAClB,IAAI,CAAC,iCAAiC,CAAC,CAAA;AAC3C,MAAA,IAAI,CAAC+H,KAAK,CAAC2B,WAAW,GAAG,IAAI,CAAA;AAC7B,MAAA,IAAI,CAAChI,IAAI,CAAC,cAAc,CAAC,CAAA;AAC3B,KAAA;AACF,GAAA;AAEAiI,EAAAA,eAAeA,GAAS;AACtB,IAAA,IAAI,CAAC5B,KAAK,CAAC6B,gBAAgB,GAAG,KAAK,CAAA;IACnC,IAAI,CAACjB,aAAa,EAAE,CAAA;AACtB,GAAA;AAEAkB,EAAAA,eAAeA,GAAS;AACtB,IAAA,IAAI,CAAC9B,KAAK,CAAC6B,gBAAgB,GAAG,IAAI,CAAA;IAClC,IAAI,CAACjB,aAAa,EAAE,CAAA;AACtB,GAAA;AAEOA,EAAAA,aAAaA,GAA8E;IAAA,IAA7E;AAAEC,MAAAA,MAAM,GAAG,KAAK;AAAEF,MAAAA,GAAG,GAAG,EAAA;AAAuC,KAAC,GAAAoB,SAAA,CAAAzF,MAAA,GAAAyF,CAAAA,IAAAA,SAAA,CAAAxF,CAAAA,CAAAA,KAAAA,SAAA,GAAAwF,SAAA,CAAG,CAAA,CAAA,GAAA,EAAE,CAAA;IACxF,MAAMC,KAAmC,GAAG,EAAE,CAAA;AAC9C;IACA,IAAI,CAACnB,MAAM,EAAE;MACXmB,KAAK,CAACC,OAAO,GAAG,IAAI,CAACjC,KAAK,CAAC6B,gBAAgB,GAAG,OAAO,GAAG,MAAM,CAAA;MAC9DG,KAAK,CAACE,MAAM,GAAG,MAAM,CAAA;MACrBF,KAAK,CAACG,KAAK,GAAG,MAAM,CAAA;AACpB,MAAA,QAAQ,IAAI,CAACnC,KAAK,CAACoC,cAAc;QAC/B,KAAKjF,eAAe,CAACE,QAAQ;UAC3B2E,KAAK,CAACK,GAAG,GAAG,KAAK,CAAA;UACjBL,KAAK,CAACM,IAAI,GAAG,KAAK,CAAA;UAClBN,KAAK,CAACO,KAAK,GAAG,MAAM,CAAA;UACpBP,KAAK,CAACQ,MAAM,GAAG,MAAM,CAAA;AACrB,UAAA,MAAA;QACF,KAAKrF,eAAe,CAACI,SAAS;UAC5ByE,KAAK,CAACK,GAAG,GAAG,KAAK,CAAA;UACjBL,KAAK,CAACO,KAAK,GAAG,KAAK,CAAA;UACnBP,KAAK,CAACM,IAAI,GAAG,MAAM,CAAA;UACnBN,KAAK,CAACQ,MAAM,GAAG,MAAM,CAAA;AACrB,UAAA,MAAA;QACF,KAAKrF,eAAe,CAACG,YAAY;UAC/B0E,KAAK,CAACQ,MAAM,GAAG,KAAK,CAAA;UACpBR,KAAK,CAACO,KAAK,GAAG,KAAK,CAAA;UACnBP,KAAK,CAACK,GAAG,GAAG,MAAM,CAAA;UAClBL,KAAK,CAACM,IAAI,GAAG,MAAM,CAAA;AACnB,UAAA,MAAA;QACF,KAAKnF,eAAe,CAACC,WAAW,CAAA;AAChC,QAAA;UACE4E,KAAK,CAACQ,MAAM,GAAG,KAAK,CAAA;UACpBR,KAAK,CAACM,IAAI,GAAG,KAAK,CAAA;UAClBN,KAAK,CAACK,GAAG,GAAG,MAAM,CAAA;UAClBL,KAAK,CAACO,KAAK,GAAG,MAAM,CAAA;AACpB,UAAA,MAAA;AACJ,OAAA;AACF,KAAC,MAAM;MACLP,KAAK,CAACC,OAAO,GAAG,OAAO,CAAA;MACvBD,KAAK,CAACG,KAAK,GAAG,MAAM,CAAA;MACpBH,KAAK,CAACE,MAAM,GAAG,MAAM,CAAA;MACrBF,KAAK,CAACK,GAAG,GAAG,KAAK,CAAA;MACjBL,KAAK,CAACO,KAAK,GAAG,KAAK,CAAA;MACnBP,KAAK,CAACM,IAAI,GAAG,KAAK,CAAA;MAClBN,KAAK,CAACQ,MAAM,GAAG,KAAK,CAAA;AACtB,KAAA;IACAC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACnB,MAAM,CAACS,KAAK,EAAEA,KAAK,CAAC,CAAA;AACvC,IAAA,IAAI,CAAChC,KAAK,CAACoB,kBAAkB,GAAGP,MAAM,CAAA;IACtC,IAAI,CAAC/F,OAAO,CAAsD;MAChEtD,MAAM,EAAEiK,0BAA0B,CAAChB,aAAa;AAChDpE,MAAAA,MAAM,EAAE;AAAE+E,QAAAA,kBAAkB,EAAEP,MAAM;AAAEF,QAAAA,GAAAA;AAAI,OAAA;AAC5C,KAAC,CAAC,CAAA;AACJ,GAAA;EAEA,MAAagC,YAAYA,CAACC,QAAgB,EAAuG;IAAA,IAArG;MAAEpE,GAAG;MAAEC,MAAM;AAAEC,MAAAA,QAAAA;AAA+D,KAAC,GAAAqD,SAAA,CAAAzF,MAAA,GAAAyF,CAAAA,IAAAA,SAAA,CAAAxF,CAAAA,CAAAA,KAAAA,SAAA,GAAAwF,SAAA,CAAG,CAAA,CAAA,GAAA,EAAE,CAAA;AAC9H,IAAA,MAAMc,QAAQ,GAAG,IAAIC,GAAG,CAACtE,GAAG,IAAK,CAAE,EAAA,IAAI,CAAC0B,SAAU,CAAqB0C,mBAAAA,EAAAA,QAAS,EAAC,CAAC,CAAA;AAClF,IAAA,MAAMG,aAAa,GAAG,IAAIxE,YAAY,CAAC;AAAEC,MAAAA,GAAG,EAAEqE,QAAQ;MAAEpE,MAAM;AAAEC,MAAAA,QAAAA;AAAS,KAAC,CAAC,CAAA;AAC3E,IAAA,MAAMqE,aAAa,CAACxD,IAAI,EAAE,CAAA;AAC1B,IAAA,IAAI,CAACwD,aAAa,CAACjE,MAAM,EAAE;MACzB,IAAI,CAAC8B,aAAa,CAAC;AAAEC,QAAAA,MAAM,EAAE,IAAA;AAAK,OAAC,CAAC,CAAA;MACpC,IAAI,CAAC/F,OAAO,CAA+C;QACzDtD,MAAM,EAAEiK,0BAA0B,CAACuB,cAAc;AACjD3G,QAAAA,MAAM,EAAE;UAAEuG,QAAQ;UAAEC,QAAQ,EAAEA,QAAQ,CAACpD,IAAAA;AAAK,SAAA;AAC9C,OAAC,CAAC,CAAA;AACF,MAAA,OAAA;AACF,KAAA;AACA;IACA,IAAI,CAACU,UAAU,CAAC8C,GAAG,CAACL,QAAQ,EAAEG,aAAa,CAAC,CAAA;AAC5C;IACA,IAAI,CAACjI,OAAO,CAA6B;MACvCtD,MAAM,EAAEiK,0BAA0B,CAACyB,aAAa;AAChD7G,MAAAA,MAAM,EAAE;AAAEuG,QAAAA,QAAAA;AAAS,OAAA;AACrB,KAAC,CAAC,CAAA;AACFG,IAAAA,aAAa,CAACI,IAAI,CAAC,OAAO,EAAE,MAAM;AAChC;AACA,MAAA,IAAI,CAAChD,UAAU,CAACiD,MAAM,CAACR,QAAQ,CAAC,CAAA;MAChC,IAAI,CAAC9H,OAAO,CAA6B;QACvCtD,MAAM,EAAEiK,0BAA0B,CAAC4B,aAAa;AAChDhH,QAAAA,MAAM,EAAE;AAAEuG,UAAAA,QAAAA;AAAS,SAAA;AACrB,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;;AAEA;AACF;AACA;AACA;AACYhI,EAAAA,UAAUA,CAACgC,OAAgE,EAAEC,QAAsC,EAAQ;IACnI,MAAMyG,EAAE,GAAGzG,QAAQ,CAAA;IACnB,MAAM0G,QAAQ,GAAG3G,OAAO,CAAA;AACxB,IAAA,IAAI,CAACT,KAAK,CAACC,OAAO,CAACmH,QAAQ,CAAC,EAAE;AAC5B,MAAA,IAAI,CAACA,QAAQ,CAACC,OAAO,EAAE;QACrBD,QAAQ,CAACC,OAAO,GAAG,KAAK,CAAA;AAC1B,OAAA;AACF,KAAA;IACA,IAAI,CAAChI,SAAS,CAACiI,MAAM,CAACF,QAAQ,EAA0BD,EAAE,CAAC,CAAA;AAC7D,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACY9I,EAAAA,aAAaA,CAACyG,oBAA4B,EAAEC,UAAmB,EAAQ;AAC/E,IAAA,IAAI,CAAC,IAAI,CAAClB,KAAK,CAACM,WAAW,EAAE;AAC3B,MAAA,IAAI,CAACN,KAAK,CAACM,WAAW,GAAG,IAAI,CAAA;AAC7B,MAAA,IAAI,CAAC3G,IAAI,CAAC,SAAS,EAAE;QAAEsH,oBAAoB;AAAEC,QAAAA,UAAAA;AAAW,OAAC,CAAC,CAAA;MAC1D/H,GAAG,CAACuK,KAAK,CAACrJ,QAAQ,CAACpC,IAAI,CAACC,SAAS,CAAC+I,oBAAoB,CAAC,CAAC,CAAA;AAC1D,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYvG,EAAAA,gBAAgBA,CAACiJ,aAAsB,EAAEC,YAAqB,EAAQ;AAC9E,IAAA,IAAI,IAAI,CAAC5D,KAAK,CAACM,WAAW,IAAK,CAAC,IAAI,CAACN,KAAK,CAAC6D,yBAAyB,IAAI,CAACF,aAAc,EAAE;AACvF,MAAA,IAAI,CAAC3D,KAAK,CAACM,WAAW,GAAG,KAAK,CAAA;AAE9B,MAAA,IAAI3H,KAAY,CAAA;AAChB,MAAA,IAAIgL,aAAa,EAAE;AACjBhL,QAAAA,KAAK,GAAG,IAAImL,qBAAqB,CAC/B,IAAI;AAAE;QACNF,YAAY,IAAIvJ,QAAQ,CAACjD,MAAM,CAACC,YAAY,EAC9C,CAAC,CAAA;AACD8B,QAAAA,GAAG,CAACuK,KAAK,CAAC/K,KAAK,CAAC,CAAA;AAClB,OAAC,MAAM;AACLA,QAAAA,KAAK,GAAG,IAAImL,qBAAqB,CAC/B,IAAI;AAAE;QACNF,YAAY,IAAIvJ,QAAQ,CAACjD,MAAM,CAACE,uBAAuB,EACzD,CAAC,CAAA;AACD6B,QAAAA,GAAG,CAACR,KAAK,CAACA,KAAK,CAAC,CAAA;AAChB,QAAA,IAAI,CAACqH,KAAK,CAACiB,oBAAoB,GAAG,IAAI,CAAA;AACtC,QAAA,IAAI,CAACjB,KAAK,CAACkB,UAAU,GAAG,KAAK,CAAA;AAC7B,QAAA,IAAI,CAAClB,KAAK,CAAC6B,gBAAgB,GAAG,KAAK,CAAA;AACnC,QAAA,IAAI,CAAC7B,KAAK,CAACoB,kBAAkB,GAAG,KAAK,CAAA;AACrC,QAAA,IAAI,CAACpB,KAAK,CAAC6D,yBAAyB,GAAG,IAAI,CAAA;AAC7C,OAAA;AAEA,MAAA,IAAI,CAAClK,IAAI,CAAC,YAAY,EAAEhB,KAAK,CAAC,CAAA;AAChC,KAAA;AACF,GAAA;EAEQoI,iBAAiBA,CAAC1E,MAA6B,EAAQ;IAC7D,MAAM;AAAEuG,MAAAA,QAAAA;AAAS,KAAC,GAAGvG,MAAM,CAAA;IAC3B,IAAI,IAAI,CAAC8D,UAAU,CAAC4D,GAAG,CAACnB,QAAQ,CAAC,EAAE;MACjC,IAAI,CAACzC,UAAU,CAAC6D,GAAG,CAACpB,QAAQ,CAAC,CAACjD,KAAK,EAAE,CAAA;AACrC,MAAA,IAAI,CAACQ,UAAU,CAACiD,MAAM,CAACR,QAAQ,CAAC,CAAA;AAClC,KAAA;AACF,GAAA;AACF,CAAA;AAACzI,eAAA,CApRK4F,qBAAqB,EACmC,cAAA,EAAA;AAC1DqC,EAAAA,cAAc,EAAE,aAAa;AAC7BnB,EAAAA,oBAAoB,EAAE,IAAI;AAC1BG,EAAAA,kBAAkB,EAAE,KAAK;AACzB6C,EAAAA,oBAAoB,EAAE,KAAK;AAE3BpC,EAAAA,gBAAgB,EAAE,KAAK;AACvBF,EAAAA,WAAW,EAAE,KAAK;AAClBT,EAAAA,UAAU,EAAE,KAAK;AACjB2C,EAAAA,yBAAyB,EAAE,KAAK;AAChCvD,EAAAA,WAAW,EAAE,KAAA;AACf,CAAC,CAAA;;ACnBI,MAAM4D,aAAa,GAAuBC,IAAY,IAAQ;EACnE,MAAMC,QAAQ,GAAGtF,MAAM,CAACuF,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAAA;EAC1D,MAAMC,WAAW,GAAGJ,IAAI,CAACK,IAAI,EAAE,CAAC;EAChCJ,QAAQ,CAACK,SAAS,GAAGF,WAAW,CAAA;AAChC,EAAA,OAAOH,QAAQ,CAACM,OAAO,CAACC,UAAU,CAAA;AACpC,CAAC;;ACCD;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,SAAS/K,YAAY,CAAsB;AAyBlEE,EAAAA,WAAWA,CAACC,gBAAwB,EAAAC,IAAA,EAAgF;IAAA,IAA9E;AAAEtC,MAAAA,iBAAiB,GAAG,GAAG;AAAEuC,MAAAA,iBAAiB,GAAG,UAAA;AAA4B,KAAC,GAAAD,IAAA,CAAA;IAChH,KAAK,CAACD,gBAAgB,EAAE;MAAErC,iBAAiB;AAAEuC,MAAAA,iBAAAA;AAAkB,KAAC,CAAC,CAAA;;AAEjE;AAlBF;AACF;AACA;AACA;IAHEC,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAMA;AACF;AACA;AACA;AACA;IAJEA,eAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAaE,IAAI,CAAC6F,KAAK,GAAAhH,aAAA,KACL4L,mBAAmB,CAAC3E,YAAY,CACpC,CAAA;;AAED;IACA,IAAI,CAAC4E,eAAe,GAAG,IAAI,CAAA;IAC3B,IAAI,CAAC1M,OAAO,GAAG,IAAI,CAAA;IAEnB,IAAI,CAAC2M,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACrK,IAAI,CAAC,IAAI,CAAC,CAAA;IAClE,IAAI,CAACsK,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACtK,IAAI,CAAC,IAAI,CAAC,CAAA;IAC5D,IAAI,CAACuK,wBAAwB,GAAG,IAAI,CAACA,wBAAwB,CAACvK,IAAI,CAAC,IAAI,CAAC,CAAA;;AAExE;;AAEA;AACA,IAAA,IAAI,CAAC4F,EAAE,CAAC,SAAS,EAAE,MAAM;AACvB,MAAA,IAAI,CAACL,KAAK,CAACM,WAAW,GAAG,IAAI,CAAA;AAC/B,KAAC,CAAC,CAAA;IAEF,MAAM2E,0BAA0B,GAAIrI,OAAkC,IAAK;MACzE,MAAM;QAAEpF,MAAM;AAAE6E,QAAAA,MAAAA;AAAO,OAAC,GAAGO,OAAO,CAAA;AAClC,MAAA,IAAIpF,MAAM,KAAK0N,sBAAsB,CAACC,gBAAgB,EAAE;AACtD,QAAA,IAAI,CAACL,qBAAqB,CAACzI,MAAmB,CAAC,CAAA;AACjD,OAAC,MAAM,IAAI7E,MAAM,KAAK0N,sBAAsB,CAACE,oBAAoB,EAAE;AACjE,QAAA,IAAI,CAACJ,wBAAwB,CAAC3I,MAAiC,CAAC,CAAA;AAClE,OAAC,MAAM,IAAI7E,MAAM,KAAK0N,sBAAsB,CAACG,aAAa,EAAE;AAC1D,QAAA,IAAI,CAACN,kBAAkB,CAAC1I,MAAiC,CAAC,CAAA;OAC3D,MAAM,IAAIzC,qBAAqB,CAAC0L,QAAQ,CAAC9N,MAAM,CAAC,EAAE;AACjD,QAAA,IAAI,CAACmC,IAAI,CAAC,MAAM,EAAEiD,OAAO,CAAC,CAAA;QAC1B,IAAI,CAACjD,IAAI,CAAC,cAAc,EAAE0C,MAAM,CAACkJ,MAAM,CAAC,CAAA;AACxC,QAAA,IAAI,CAAC5L,IAAI,CAAC,SAAS,EAAE;AACnB6L,UAAAA,IAAI,EAAEhO,MAAM;AACZuB,UAAAA,IAAI,EAAEsD,MAAAA;AACR,SAAC,CAAC,CAAA;AACJ,OAAA;KACD,CAAA;;AAED;IACA,IAAI,CAACL,uBAAuB,CAACqE,EAAE,CAAC,cAAc,EAAE4E,0BAA0B,CAAC,CAAA;AAC7E,GAAA;;AAEA;AACF;AACA;AACE3E,EAAAA,WAAWA,GAAY;AACrB,IAAA,OAAO,IAAI,CAACN,KAAK,CAACM,WAAW,CAAA;AAC/B,GAAA;;AAEA;AACA;AACA;AACF;AACA;AACA;AACA;EACE,MAAMzF,eAAeA,GAAkB;IACrC,IAAI;MACF,MAAM;QAAE4K,QAAQ;QAAEtN,OAAO;AAAEuN,QAAAA,UAAAA;AAAW,OAAC,GAAI,MAAM,IAAI,CAAC5K,OAAO,CAAC;QAC5DtD,MAAM,EAAEmO,qBAAqB,CAACjE,kBAAkB;AAChDrF,QAAAA,MAAM,EAAE,EAAA;AACV,OAAC,CAA+B,CAAA;;AAEhC;AACA,MAAA,IAAI,CAAC1C,IAAI,CAAC,SAAS,EAAE;AAAExB,QAAAA,OAAAA;AAAQ,OAAC,CAAC,CAAA;MAEjC,IAAI,CAAC4M,kBAAkB,CAAC;AAAE5M,QAAAA,OAAAA;AAAQ,OAAC,CAAC,CAAA;MACpC,IAAI,CAAC6M,wBAAwB,CAAC;QAAES,QAAQ;AAAEC,QAAAA,UAAAA;AAAW,OAAC,CAAC,CAAA;AACvD,MAAA,IAAI,CAACZ,qBAAqB,CAACW,QAAQ,CAAC,CAAA;KACrC,CAAC,OAAO9M,KAAK,EAAE;AACdQ,MAAAA,GAAG,CAACR,KAAK,CAAC,+DAA+D,EAAEA,KAAK,CAAC,CAAA;AACnF,KAAC,SAAS;AACRQ,MAAAA,GAAG,CAAClB,IAAI,CAAC,4BAA4B,CAAC,CAAA;AACtC,MAAA,IAAI,CAAC+H,KAAK,CAAC2B,WAAW,GAAG,IAAI,CAAA;AAC7B,MAAA,IAAI,CAAChI,IAAI,CAAC,cAAc,CAAC,CAAA;AAC3B,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACEiB,EAAAA,UAAUA,CAACgC,OAAgE,EAAEC,QAAsC,EAA4B;AAAA,IAAA,IAA1B+I,UAAU,GAAA7D,SAAA,CAAAzF,MAAA,GAAA,CAAA,IAAAyF,SAAA,CAAA,CAAA,CAAA,KAAAxF,SAAA,GAAAwF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;IACrI,IAAIuB,EAAE,GAAGzG,QAAQ,CAAA;IACjB,MAAM0G,QAAQ,GAAG3G,OAAO,CAAA;AACxB,IAAA,IAAI,CAACT,KAAK,CAACC,OAAO,CAACmH,QAAQ,CAAC,EAAE;AAC5B,MAAA,IAAI,CAACA,QAAQ,CAACC,OAAO,EAAE;QACrBD,QAAQ,CAACC,OAAO,GAAG,KAAK,CAAA;AAC1B,OAAA;MACA,IAAID,QAAQ,CAAC/L,MAAM,KAAK,cAAc,IAAI+L,QAAQ,CAAC/L,MAAM,KAAK,qBAAqB,EAAE;AACnF;AACA8L,QAAAA,EAAE,GAAGA,CAACuC,GAAU,EAAEpN,GAA0B,KAAK;AAC/C,UAAA,IAAI,CAACqM,qBAAqB,CAACrM,GAAG,CAAC8M,MAAM,IAAI,EAAE,EAAEhC,QAAQ,CAAC/L,MAAM,KAAK,cAAc,EAAEoO,UAAU,CAAC,CAAA;AAC5F/I,UAAAA,QAAQ,CAACgJ,GAAG,EAAEpN,GAAG,CAAC,CAAA;SACnB,CAAA;AACH,OAAC,MAAM,IAAI8K,QAAQ,CAAC/L,MAAM,KAAK,yBAAyB,EAAE;QACxD,IAAI,CAACgE,SAAS,CAACiI,MAAM,CAAC7G,OAAO,EAA0B0G,EAAE,CAAC,CAAA;AAC1D,QAAA,OAAA;AACF,OAAA;AACF,KAAA;AACA,IAAA,IAAI,CAACwC,eAAe,CAACvC,QAAQ,EAAED,EAAE,CAAC,CAAA;AACpC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACY9I,aAAaA,CAACrC,OAAe,EAAQ;AAC7C,IAAA,IAAI,CAAC,IAAI,CAAC6H,KAAK,CAACM,WAAW,EAAE;AAC3B,MAAA,IAAI,CAACN,KAAK,CAACM,WAAW,GAAG,IAAI,CAAA;AAC7B,MAAA,IAAI,CAAC3G,IAAI,CAAC,SAAS,EAAE;AAAExB,QAAAA,OAAAA;AAAQ,OAAC,CAAC,CAAA;MACjCgB,GAAG,CAACuK,KAAK,CAACrJ,QAAQ,CAACpC,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,CAAC,CAAA;AAC7C,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYuC,EAAAA,gBAAgBA,CAACiJ,aAAsB,EAAEC,YAAqB,EAAQ;AAC9E,IAAA,IAAI,IAAI,CAAC5D,KAAK,CAACM,WAAW,IAAK,CAAC,IAAI,CAACN,KAAK,CAAC6D,yBAAyB,IAAI,CAACF,aAAc,EAAE;AACvF,MAAA,IAAI,CAAC3D,KAAK,CAACM,WAAW,GAAG,KAAK,CAAA;AAE9B,MAAA,IAAI3H,KAAY,CAAA;AAChB,MAAA,IAAIgL,aAAa,EAAE;AACjBhL,QAAAA,KAAK,GAAG,IAAImL,qBAAqB,CAC/B,IAAI;AAAE;QACNF,YAAY,IAAIvJ,QAAQ,CAACjD,MAAM,CAACC,YAAY,EAC9C,CAAC,CAAA;AACD8B,QAAAA,GAAG,CAACuK,KAAK,CAAC/K,KAAK,CAAC,CAAA;AAClB,OAAC,MAAM;AACLA,QAAAA,KAAK,GAAG,IAAImL,qBAAqB,CAC/B,IAAI;AAAE;QACNF,YAAY,IAAIvJ,QAAQ,CAACjD,MAAM,CAACE,uBAAuB,EACzD,CAAC,CAAA;AACD6B,QAAAA,GAAG,CAACR,KAAK,CAACA,KAAK,CAAC,CAAA;QAChB,IAAI,CAACR,OAAO,GAAG,IAAI,CAAA;AACnB,QAAA,IAAI,CAAC6H,KAAK,CAACyF,QAAQ,GAAG,IAAI,CAAA;QAC1B,IAAI,CAACZ,eAAe,GAAG,IAAI,CAAA;AAC3B,QAAA,IAAI,CAAC7E,KAAK,CAAC0F,UAAU,GAAG,KAAK,CAAA;AAC7B,QAAA,IAAI,CAAC1F,KAAK,CAAC6D,yBAAyB,GAAG,IAAI,CAAA;AAC7C,OAAA;AAEA,MAAA,IAAI,CAAClK,IAAI,CAAC,YAAY,EAAEhB,KAAK,CAAC,CAAA;AAChC,KAAA;AACF,GAAA;;AAEA;AACF;AACA;EACYmM,qBAAqBA,CAACW,QAAmB,EAAmD;AAAA,IAAA,IAAjDM,aAAa,GAAAhE,SAAA,CAAAzF,MAAA,GAAA,CAAA,IAAAyF,SAAA,CAAA,CAAA,CAAA,KAAAxF,SAAA,GAAAwF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;AAAA,IAAA,IAAE6D,UAAU,GAAA7D,SAAA,CAAAzF,MAAA,GAAA,CAAA,IAAAyF,SAAA,CAAA,CAAA,CAAA,KAAAxF,SAAA,GAAAwF,SAAA,CAAA,CAAA,CAAA,GAAG,KAAK,CAAA;AAC5F;IACA,IAAIiE,aAAa,GAAGP,QAAQ,CAAA;AAC5B,IAAA,IAAI,CAACtJ,KAAK,CAACC,OAAO,CAAC4J,aAAa,CAAC,EAAE;AACjC7M,MAAAA,GAAG,CAACR,KAAK,CAAC,yEAAyE,EAAEqN,aAAa,CAAC,CAAA;AACnGA,MAAAA,aAAa,GAAG,EAAE,CAAA;AACpB,KAAA;AAEA,IAAA,KAAK,MAAMC,OAAO,IAAIR,QAAQ,EAAE;AAC9B,MAAA,IAAI,OAAOQ,OAAO,KAAK,QAAQ,EAAE;AAC/B9M,QAAAA,GAAG,CAACR,KAAK,CAAC,+DAA+D,EAAE8M,QAAQ,CAAC,CAAA;AACpFO,QAAAA,aAAa,GAAG,EAAE,CAAA;AAClB,QAAA,MAAA;AACF,OAAA;AACF,KAAA;;AAEA;IACA,IAAI,CAACE,MAAM,CAAC,IAAI,CAAClG,KAAK,CAACyF,QAAQ,EAAEO,aAAa,CAAC,EAAE;AAC/C;AACA;MACA,IAAID,aAAa,IAAI5J,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC4D,KAAK,CAACyF,QAAQ,CAAC,IAAI,IAAI,CAACzF,KAAK,CAACyF,QAAQ,CAACnJ,MAAM,GAAG,CAAC,IAAI,CAACsJ,UAAU,EAAE;AACxGzM,QAAAA,GAAG,CAACR,KAAK,CAAC,gFAAgF,EAAEqN,aAAa,CAAC,CAAA;AAC5G,OAAA;AAEA,MAAA,IAAI,CAAChG,KAAK,CAACyF,QAAQ,GAAGO,aAAyB,CAAA;AAC/C,MAAA,IAAI,CAACrM,IAAI,CAAC,iBAAiB,EAAEqM,aAAa,CAAC,CAAA;AAC7C,KAAA;;AAEA;IACA,IAAI,IAAI,CAACnB,eAAe,KAAKmB,aAAa,CAAC,CAAC,CAAC,EAAE;MAC7C,IAAI,CAACnB,eAAe,GAAImB,aAAa,CAAC,CAAC,CAAC,IAAe,IAAI,CAAA;AAC7D,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYjB,EAAAA,kBAAkBA,GAA+C;IAAA,IAA9C;AAAE5M,MAAAA,OAAAA;AAA8B,KAAC,GAAA4J,SAAA,CAAAzF,MAAA,GAAAyF,CAAAA,IAAAA,SAAA,CAAAxF,CAAAA,CAAAA,KAAAA,SAAA,GAAAwF,SAAA,CAAG,CAAA,CAAA,GAAA,EAAE,CAAA;IACjE,IAAI,CAAC5J,OAAO,EAAE;AACZgB,MAAAA,GAAG,CAACR,KAAK,CAAC,uEAAuE,EAAE;AAAER,QAAAA,OAAAA;AAAQ,OAAC,CAAC,CAAA;AAC/F,MAAA,OAAA;AACF,KAAA;IAEA,IAAIA,OAAO,KAAK,SAAS,EAAE;AACzB,MAAA,IAAI,CAACuC,gBAAgB,CAAC,IAAI,CAAC,CAAA;AAC7B,KAAC,MAAM;AACL,MAAA,IAAI,CAACF,aAAa,CAACrC,OAAO,CAAC,CAAA;AAE3B,MAAA,IAAIA,OAAO,KAAK,IAAI,CAACA,OAAO,EAAE;QAC5B,IAAI,CAACA,OAAO,GAAGA,OAAO,CAAA;AACtB,QAAA,IAAI,IAAI,CAAC6H,KAAK,CAAC2B,WAAW,EAAE;UAC1B,IAAI,CAAChI,IAAI,CAAC,cAAc,EAAE,IAAI,CAACxB,OAAO,CAAC,CAAA;AACzC,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY6M,EAAAA,wBAAwBA,GAAqF;IAAA,IAApF;MAAES,QAAQ;AAAEC,MAAAA,UAAAA;AAA0D,KAAC,GAAA3D,SAAA,CAAAzF,MAAA,GAAAyF,CAAAA,IAAAA,SAAA,CAAAxF,CAAAA,CAAAA,KAAAA,SAAA,GAAAwF,SAAA,CAAG,CAAA,CAAA,GAAA,EAAE,CAAA;AAC7G,IAAA,IAAI,OAAO2D,UAAU,KAAK,SAAS,EAAE;AACnCvM,MAAAA,GAAG,CAACR,KAAK,CAAC,yEAAyE,EAAE;AAAE+M,QAAAA,UAAAA;AAAW,OAAC,CAAC,CAAA;AACpG,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAIA,UAAU,KAAK,IAAI,CAAC1F,KAAK,CAAC0F,UAAU,EAAE;AACxC,MAAA,IAAI,CAAC1F,KAAK,CAAC0F,UAAU,GAAGA,UAAU,CAAA;AAClC,MAAA,IAAI,CAACZ,qBAAqB,CAACW,QAAQ,IAAI,EAAE,CAAC,CAAA;AAC5C,KAAA;AACF,GAAA;AACF,CAAA;AAACtL,eAAA,CAhRKyK,mBAAmB,EAC8B,cAAA,EAAA;AACnDa,EAAAA,QAAQ,EAAE,IAAI;AACdnF,EAAAA,WAAW,EAAE,KAAK;AAClBoF,EAAAA,UAAU,EAAE,KAAK;AACjB/D,EAAAA,WAAW,EAAE,KAAK;AAClBkC,EAAAA,yBAAyB,EAAE,KAAK;AAChCI,EAAAA,oBAAoB,EAAE,KAAA;AACxB,CAAC,CAAA;;AC1BH;AACA;AACA;AACA;AACA;AACA,SAASkC,SAASA,CAAC3H,GAAW,EAAoB;AAChD,EAAA,OAAO,IAAIhC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAI;AACF,MAAA,MAAM0J,GAAG,GAAG/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;AACzC8B,MAAAA,GAAG,CAACC,MAAM,GAAG,MAAM5J,OAAO,CAAC,IAAI,CAAC,CAAA;AAChC2J,MAAAA,GAAG,CAACE,OAAO,GAAG,MAAM7J,OAAO,CAAC,KAAK,CAAC,CAAA;MAClC2J,GAAG,CAACG,GAAG,GAAG/H,GAAG,CAAA;KACd,CAAC,OAAOgI,CAAC,EAAE;MACV9J,MAAM,CAAC8J,CAAC,CAAC,CAAA;AACX,KAAA;AACF,GAAC,CAAC,CAAA;AACJ,CAAA;;AAEA;AACA;AACA;AACA,MAAMC,WAAW,GAAI3H,MAAc,IAAa;EAC9C,MAAM;AAAEuF,IAAAA,QAAAA;AAAS,GAAC,GAAGvF,MAAM,CAAA;AAE3B,EAAA,MAAM4H,QAAQ,GAAGrC,QAAQ,CAACsC,aAAa,CAAkB,sCAAsC,CAAC,CAAA;AAChG,EAAA,IAAID,QAAQ,EAAE;IACZ,OAAOA,QAAQ,CAAChC,OAAO,CAAA;AACzB,GAAA;AAEA,EAAA,MAAMkC,SAAS,GAAGvC,QAAQ,CAACsC,aAAa,CAAkB,2BAA2B,CAAC,CAAA;AACtF,EAAA,IAAIC,SAAS,EAAE;IACb,OAAOA,SAAS,CAAClC,OAAO,CAAA;AAC1B,GAAA;EAEA,IAAIL,QAAQ,CAACwC,KAAK,IAAIxC,QAAQ,CAACwC,KAAK,CAACvK,MAAM,GAAG,CAAC,EAAE;IAC/C,OAAO+H,QAAQ,CAACwC,KAAK,CAAA;AACvB,GAAA;AAEA,EAAA,OAAO/H,MAAM,CAAChD,QAAQ,CAACgL,QAAQ,CAAA;AACjC,CAAC,CAAA;;AAED;AACA;AACA;AACA,eAAeC,WAAWA,CAACjI,MAAc,EAAmB;EAC1D,IAAI;IACF,MAAM;AAAEuF,MAAAA,QAAAA;AAAS,KAAC,GAAGvF,MAAM,CAAA;;AAE3B;AACA,IAAA,IAAIkI,IAAI,GAAG3C,QAAQ,CAACsC,aAAa,CAAkB,kCAAkC,CAAC,CAAA;IACtF,IAAIK,IAAI,KAAK,MAAMb,SAAS,CAACa,IAAI,CAACvH,IAAI,CAAC,CAAC,EAAE;MACxC,OAAOuH,IAAI,CAACvH,IAAI,CAAA;AAClB,KAAA;;AAEA;IACAuH,IAAI,GAAG7K,KAAK,CAAC8K,IAAI,CAAC5C,QAAQ,CAAC6C,gBAAgB,CAAkB,yBAAyB,CAAC,CAAC,CAACC,IAAI,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC3H,IAAI,CAAC,CAAC,CAAA;IAC7H,IAAIuH,IAAI,KAAK,MAAMb,SAAS,CAACa,IAAI,CAACvH,IAAI,CAAC,CAAC,EAAE;MACxC,OAAOuH,IAAI,CAACvH,IAAI,CAAA;AAClB,KAAA;AAEA,IAAA,OAAO,EAAE,CAAA;GACV,CAAC,OAAO9G,KAAK,EAAE;AACd,IAAA,OAAO,EAAE,CAAA;AACX,GAAA;AACF,CAAA;;AAEA;AACA;AACA;AACA;AACA,MAAM2O,eAAe,GAAG,aAAsD;AAC5EC,EAAAA,IAAI,EAAEd,WAAW,CAAC3H,MAAM,CAAC;AACzBkI,EAAAA,IAAI,EAAE,MAAMD,WAAW,CAACjI,MAAM,CAAA;AAChC,CAAC,CAAC;;AC5CF,MAAM0I,mBAAqE,GAAG;EAC5E,CAACzK,kBAAkB,CAACG,OAAO,GAAG;AAC5BsB,IAAAA,GAAG,EAAE,gCAAgC;AACrCiJ,IAAAA,QAAQ,EAAE,OAAA;GACX;EACD,CAAC1K,kBAAkB,CAACE,WAAW,GAAG;AAChCuB,IAAAA,GAAG,EAAE,uBAAuB;AAC5BiJ,IAAAA,QAAQ,EAAE,OAAA;GACX;EACD,CAAC1K,kBAAkB,CAACC,UAAU,GAAG;AAC/BwB,IAAAA,GAAG,EAAE,4BAA4B;AACjCiJ,IAAAA,QAAQ,EAAE,OAAA;AACZ,GAAA;AACF,CAAC,CAAA;;AAED;AACA,CAAC,eAAeC,aAAaA,GAAG;EAC9B,IAAI;AACF,IAAA,IAAI,OAAOrD,QAAQ,KAAK,WAAW,EAAE,OAAA;AACrC,IAAA,MAAMsD,eAAe,GAAGtD,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAAA;IACtD,MAAM;AAAE9F,MAAAA,GAAG,EAAE6C,QAAAA;KAAU,GAAGmG,mBAAmB,CAACI,UAAU,CAAA;AACxDD,IAAAA,eAAe,CAAClI,IAAI,GAAI,CAAA,EAAE4B,QAAS,CAAO,MAAA,CAAA,CAAA;IAC1CsG,eAAe,CAACE,WAAW,GAAG,WAAW,CAAA;IACzCF,eAAe,CAACnC,IAAI,GAAG,WAAW,CAAA;IAClCmC,eAAe,CAACG,GAAG,GAAG,UAAU,CAAA;IAChC,IAAIH,eAAe,CAACI,OAAO,IAAIJ,eAAe,CAACI,OAAO,CAACC,QAAQ,EAAE;MAC/D,IAAIL,eAAe,CAACI,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAChD3D,QAAAA,QAAQ,CAAC4D,IAAI,CAACC,WAAW,CAACP,eAAe,CAAC,CAAA;AAC5C,OAAA;AACF,KAAA;GACD,CAAC,OAAOhP,KAAK,EAAE;AACdQ,IAAAA,GAAG,CAACM,IAAI,CAACd,KAAK,CAAC,CAAA;AACjB,GAAA;AACF,CAAC,GAAG,CAAA;AAEG,MAAMwP,4BAA4B,GAAG,IAAIC,GAAG,CAAC,CAAC3G,0BAA0B,CAAC4G,YAAY,CAAC,CAE5F,CAAA;AAEM,MAAMC,uBAAuB,GAAG,IAAIF,GAAG,CAAC,CAC7CG,YAAY,CAACC,WAAW,EACxBD,YAAY,CAACE,6BAA6B,EAC1CF,YAAY,CAACG,QAAQ,EACrBH,YAAY,CAACI,mBAAmB,EAChCJ,YAAY,CAACK,sBAAsB,EACnCL,YAAY,CAACM,sBAAsB,EACnCN,YAAY,CAACO,aAAa,EAC1BP,YAAY,CAACQ,eAAe,EAC5BR,YAAY,CAACS,SAAS,EACtBT,YAAY,CAACU,YAAY,CAC1B,CAAoC,CAAA;AAErC,MAAMC,OAAO,CAAC;AAeZnP,EAAAA,WAAWA,GAAyC;IAAA,IAAxC;AAAEoP,MAAAA,WAAW,GAAG,KAAA;AAAgB,KAAC,GAAApH,SAAA,CAAAzF,MAAA,GAAAyF,CAAAA,IAAAA,SAAA,CAAAxF,CAAAA,CAAAA,KAAAA,SAAA,GAAAwF,SAAA,CAAG,CAAA,CAAA,GAAA,EAAE,CAAA;IAAA5H,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,uBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;IAAAA,eAAA,CAAA,IAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAChD,IAAA,IAAI,CAACiP,aAAa,GAAG,KAAK,CAAC;IAC3B,IAAI,CAACD,WAAW,GAAGA,WAAW,CAAA;AAChC,GAAA;EAEA,MAAME,IAAIA,GAO4B;IAAA,IAP3B;MACTC,QAAQ,GAAGvM,kBAAkB,CAACC,UAAU;AACxCuM,MAAAA,aAAa,GAAG,KAAK;MACrBC,WAAW;MACXC,gBAAgB,EAAE3H,eAAe,GAAG,KAAK;MACzCM,cAAc,GAAGjF,eAAe,CAACC,WAAW;AAC5CsM,MAAAA,UAAAA;AACa,KAAC,GAAA3H,SAAA,CAAAzF,MAAA,GAAAyF,CAAAA,IAAAA,SAAA,CAAAxF,CAAAA,CAAAA,KAAAA,SAAA,GAAAwF,SAAA,CAAG,CAAA,CAAA,GAAA,EAAE,CAAA;IACnB,IAAI,IAAI,CAACqH,aAAa,EAAE,MAAM,IAAIhP,KAAK,CAAC,qBAAqB,CAAC,CAAA;IAC9D,MAAM;AAAEoE,MAAAA,GAAG,EAAE6C,QAAQ;AAAEoG,MAAAA,QAAAA;KAAU,GAC/BiC,UAAU,IAAIA,UAAU,CAACJ,QAAQ,CAAC,GAAAtQ,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAQwO,mBAAmB,CAAC8B,QAAQ,CAAC,CAAA,EAAKI,UAAU,CAACJ,QAAQ,CAAC,CAAK9B,GAAAA,mBAAmB,CAAC8B,QAAQ,CAAC,CAAA;AACpInQ,IAAAA,GAAG,CAAClB,IAAI,CAACoJ,QAAQ,EAAE,YAAY,CAAC,CAAA;AAChClI,IAAAA,GAAG,CAACwQ,eAAe,CAAClC,QAAQ,CAAC,CAAA;AAC7B,IAAA,IAAI8B,aAAa,EAAEpQ,GAAG,CAACyQ,SAAS,EAAE,CAAC,KAC9BzQ,GAAG,CAAC0Q,UAAU,EAAE,CAAA;AAErB,IAAA,MAAMC,cAAc,GAAG,IAAIhH,GAAG,CAACzB,QAAQ,CAAC,CAAA;IACxC,IAAIyI,cAAc,CAACC,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAEF,cAAc,CAACC,QAAQ,IAAI,OAAO,CAAC,KACzED,cAAc,CAACC,QAAQ,IAAI,QAAQ,CAAA;AAExC,IAAA,MAAME,UAAU,GAAG,IAAIC,eAAe,EAAE,CAAA;IACxCD,UAAU,CAACE,MAAM,CAAC,QAAQ,EAAErL,MAAM,CAAChD,QAAQ,CAACD,MAAM,CAAC,CAAA;AAEnDiO,IAAAA,cAAc,CAACM,IAAI,GAAGH,UAAU,CAACI,QAAQ,EAAE,CAAA;AAC3C;AACA;AACA,IAAA,IAAI,CAACC,YAAY,GAAGpG,aAAa,CAC9B,CAAA;AACP;AACA;AACA;AACA,aAAe4F,EAAAA,cAAc,CAACrK,IAAK,CAAA;AACnC;AACA,+DAAA,EAAiE,IAAI,CAAC0J,WAAW,CAACkB,QAAQ,EAAG,CAAA;AAC7F,gBAAA,CACI,CAAC,CAAA;IAED,IAAI,CAACjI,cAAc,GAAGA,cAAc,CAAA;AAEpC,IAAA,OAAO,IAAI5F,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC5C,IAAI;QACFoC,MAAM,CAACuF,QAAQ,CAACkG,IAAI,CAACrC,WAAW,CAAC,IAAI,CAACoC,YAAY,CAAC,CAAA;AACnD,QAAA,IAAI,CAACA,YAAY,CAAC9I,gBAAgB,CAAC,MAAM,EAAE,YAAY;AACrD,UAAA,MAAMgJ,YAAY,GAAG,MAAMlD,eAAe,EAAE,CAAA;AAC5C;AACA,UAAA,IAAI,CAACgD,YAAY,CAACG,aAAa,CAACC,WAAW,CACzC;YACEtI,cAAc;YACdoH,WAAW;YACXgB,YAAY;AACZjB,YAAAA,aAAAA;AACF,WAAC,EACDO,cAAc,CAACjO,MACjB,CAAC,CAAA;UACD,MAAM,IAAI,CAAC8O,SAAS,CAAC;AACnBtJ,YAAAA,QAAAA;AACF,WAAC,CAAC,CAAA;AACF;AACA;UACA,IAAI,CAACQ,gBAAgB,GAAGC,eAAe,CAAA;UACvC,IAAI,CAACsH,aAAa,GAAG,IAAI,CAAA;AACzB3M,UAAAA,OAAO,EAAE,CAAA;AACX,SAAC,CAAC,CAAA;OACH,CAAC,OAAO9D,KAAK,EAAE;QACd+D,MAAM,CAAC/D,KAAK,CAAC,CAAA;AACf,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;EAEA,MAAMiS,KAAKA,GAA+F;AAAA,IAAA,IAA9FvO,MAAoE,GAAA0F,SAAA,CAAAzF,MAAA,GAAA,CAAA,IAAAyF,SAAA,CAAA,CAAA,CAAA,KAAAxF,SAAA,GAAAwF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IACnF,IAAI,CAAC,IAAI,CAACqH,aAAa,EAAE,MAAM,IAAIhP,KAAK,CAAC,mBAAmB,CAAC,CAAA;IAC7D,IAAI;AACF,MAAA,IAAI,CAACiC,MAAM,CAACwO,aAAa,EAAE;AACzB,QAAA,IAAI,CAACC,qBAAqB,CAAClK,aAAa,CAAC;AAAEC,UAAAA,MAAM,EAAE,IAAA;AAAK,SAAC,CAAC,CAAA;AAC5D,OAAA;;AAEA;MACA,MAAMpI,GAAG,GAAG,MAAM,IAAI+D,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;AACjD;AACA,QAAA,IAAI,CAACqO,QAAQ,CAACnQ,UAAU,CACtB;AAAEpD,UAAAA,MAAM,EAAE,qBAAqB;UAAE6E,MAAM,EAAE,CAACA,MAAM,CAACwO,aAAa,EAAExO,MAAM,CAAC2O,UAAU,CAAA;AAAE,SAAC,EACpFrO,qBAAqB,CAACF,OAAO,EAA+BC,MAAM,CACpE,CAAC,CAAA;AACH,OAAC,CAAC,CAAA;AACFvD,MAAAA,GAAG,CAAClB,IAAI,CAAC,YAAY,EAAEQ,GAAG,CAAC,CAAA;AAE3B,MAAA,IAAI0D,KAAK,CAACC,OAAO,CAAC3D,GAAG,CAAC,IAAIA,GAAG,CAAC6D,MAAM,GAAG,CAAC,EAAE;QACxC,IAAI,IAAI,CAACuF,gBAAgB,EAAE,IAAI,CAACC,eAAe,EAAE,CAAA;AACjD,QAAA,OAAOrJ,GAAG,CAAA;AACZ,OAAA;AACA;AACA,MAAA,MAAM,IAAI2B,KAAK,CAAC,cAAc,CAAC,CAAA;KAChC,CAAC,OAAOzB,KAAK,EAAE;AACdQ,MAAAA,GAAG,CAACR,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAA;AAChC,MAAA,MAAMA,KAAK,CAAA;AACb,KAAC,SAAS;AACR,MAAA,IAAI,CAACmS,qBAAqB,CAAClK,aAAa,CAAC;AAAEC,QAAAA,MAAM,EAAE,KAAA;AAAM,OAAC,CAAC,CAAA;AAC7D,KAAA;AACF,GAAA;EAEA,MAAMoK,MAAMA,GAAkB;AAC5B,IAAA,IAAI,CAAC,IAAI,CAACH,qBAAqB,CAAC5J,UAAU,EAAE,MAAM,IAAI9G,KAAK,CAAC,eAAe,CAAC,CAAA;AAE5E,IAAA,MAAM,IAAI,CAAC0Q,qBAAqB,CAAChQ,OAAO,CAAC;MACvCtD,MAAM,EAAEiK,0BAA0B,CAACyJ,MAAM;AACzC7O,MAAAA,MAAM,EAAE,EAAA;AACV,KAAC,CAAC,CAAA;IAEF,IAAI,CAACuF,eAAe,EAAE,CAAA;AACxB,GAAA;EAEA,MAAMuJ,OAAOA,GAAkB;AAC7B,IAAA,IAAI,IAAI,CAACL,qBAAqB,CAAC5J,UAAU,EAAE;AACzC,MAAA,MAAM,IAAI,CAAC+J,MAAM,EAAE,CAAA;AACrB,KAAA;IACA,IAAI,CAACG,SAAS,EAAE,CAAA;AAClB,GAAA;AAEAA,EAAAA,SAASA,GAAS;IAChB,SAASC,SAASA,CAACC,OAAgB,EAAE;AACnC,MAAA,OAAOA,OAAO,YAAYC,OAAO,IAAID,OAAO,YAAYE,QAAQ,CAAA;AAClE,KAAA;AACA,IAAA,IAAIH,SAAS,CAAC,IAAI,CAACf,YAAY,CAAC,IAAIxL,MAAM,CAACuF,QAAQ,CAACkG,IAAI,CAACkB,QAAQ,CAAC,IAAI,CAACnB,YAAY,CAAC,EAAE;AACpF,MAAA,IAAI,CAACA,YAAY,CAACoB,MAAM,EAAE,CAAA;MAC1B,IAAI,CAACpB,YAAY,GAAG/N,SAAS,CAAA;AAC/B,KAAA;IACA,IAAI,CAAC6M,aAAa,GAAG,KAAK,CAAA;AAC5B,GAAA;AAEAxH,EAAAA,eAAeA,GAAS;AACtB,IAAA,IAAI,CAACkJ,qBAAqB,CAAClJ,eAAe,EAAE,CAAA;AAC9C,GAAA;AAEAE,EAAAA,eAAeA,GAAS;AACtB,IAAA,IAAI,CAACgJ,qBAAqB,CAAChJ,eAAe,EAAE,CAAA;AAC9C,GAAA;EAEA,MAAM6J,WAAWA,GAAsB;IACrC,MAAMC,gBAAgB,GAAG,MAAM,IAAI,CAACd,qBAAqB,CAAChQ,OAAO,CAAe;MAC9EtD,MAAM,EAAEiK,0BAA0B,CAACoK,SAAS;AAC5CxP,MAAAA,MAAM,EAAE,EAAA;AACV,KAAC,CAAC,CAAA;AACF,IAAA,OAAOuP,gBAAgB,CAAA;AACzB,GAAA;EAEA,MAAME,wBAAwBA,GAAkB;AAC9C,IAAA,IAAI,CAAChB,qBAAqB,CAAClK,aAAa,CAAC;AAAEC,MAAAA,MAAM,EAAE,IAAA;AAAK,KAAC,CAAC,CAAA;AAC1D,IAAA,MAAM,IAAI,CAACiK,qBAAqB,CAAChQ,OAAO,CAAc;MACpDtD,MAAM,EAAEiK,0BAA0B,CAACsK,mBAAmB;AACtD1P,MAAAA,MAAM,EAAE,EAAA;AACV,KAAC,CAAC,CAAA;AACJ,GAAA;EAEA,MAAM2P,YAAYA,GAAkB;AAClC,IAAA,IAAI,CAAClB,qBAAqB,CAAClK,aAAa,CAAC;AAAEC,MAAAA,MAAM,EAAE,IAAA;AAAK,KAAC,CAAC,CAAA;AAC1D,IAAA,MAAM,IAAI,CAACiK,qBAAqB,CAAChQ,OAAO,CAAc;MACpDtD,MAAM,EAAEiK,0BAA0B,CAACwK,cAAc;AACjD5P,MAAAA,MAAM,EAAE,EAAA;AACV,KAAC,CAAC,CAAA;AACJ,GAAA;EAEA,MAAM6P,YAAYA,GAAkB;AAClC,IAAA,IAAI,CAACpB,qBAAqB,CAAClK,aAAa,CAAC;AAAEC,MAAAA,MAAM,EAAE,IAAA;AAAK,KAAC,CAAC,CAAA;AAC1D,IAAA,MAAM,IAAI,CAACiK,qBAAqB,CAAChQ,OAAO,CAAc;MACpDtD,MAAM,EAAEiK,0BAA0B,CAAC0K,aAAa;AAChD9P,MAAAA,MAAM,EAAE,EAAA;AACV,KAAC,CAAC,CAAA;AACJ,GAAA;EAEA,MAAcsO,SAASA,CAACyB,cAAoC,EAAiB;AAC3EjT,IAAAA,GAAG,CAAClB,IAAI,CAAC,mBAAmB,CAAC,CAAA;AAC7B;AACA,IAAA,MAAMoU,cAAc,GAAG,IAAIC,qBAAqB,CAAC;AAC/C/E,MAAAA,IAAI,EAAE,aAAa;AACnB9I,MAAAA,MAAM,EAAE,cAAc;AACtB8N,MAAAA,YAAY,EAAE,IAAI,CAACjC,YAAY,CAACG,aAAa;MAC7C+B,YAAY,EAAEJ,cAAc,CAAC/K,QAAAA;AAC/B,KAAC,CAAC,CAAA;;AAEF;AACA,IAAA,MAAMoL,mBAAmB,GAAG,IAAIH,qBAAqB,CAAC;AACpD/E,MAAAA,IAAI,EAAE,qBAAqB;AAC3B9I,MAAAA,MAAM,EAAE,sBAAsB;AAC9B8N,MAAAA,YAAY,EAAE,IAAI,CAACjC,YAAY,CAACG,aAAa;MAC7C+B,YAAY,EAAEJ,cAAc,CAAC/K,QAAAA;AAC/B,KAAC,CAAC,CAAA;;AAEF;IACA,MAAMqL,cAAc,GAAG,IAAI9H,mBAAmB,CAACyH,cAAc,EAAuB,EAAE,CAAC,CAAA;IACvF,MAAMvB,qBAAqB,GAAG,IAAI/K,qBAAqB,CAAC0M,mBAAmB,EAAuB,EAAE,EAAE;MAAErK,cAAc,EAAE,IAAI,CAACA,cAAAA;AAAe,KAAC,CAAC,CAAA;AAE9IsK,IAAAA,cAAc,CAAC5G,eAAe,GAAG,CAAClJ,OAAgE,EAAE0G,EAAgC,KAAK;MACvI,MAAMC,QAAQ,GAAG3G,OAAO,CAAA;AACxB,MAAA,IAAI,CAACT,KAAK,CAACC,OAAO,CAACmH,QAAQ,CAAC,IAAI+E,uBAAuB,CAACvE,GAAG,CAACR,QAAQ,CAAC/L,MAA2B,CAAC,EAAE;AACjG,QAAA,MAAMoL,QAAQ,GAAG+J,QAAQ,EAAE,CAAA;AAC3B7B,QAAAA,qBAAqB,CAACnI,YAAY,CAACC,QAAQ,EAAE;AAC3CnE,UAAAA,MAAM,EAAE,QAAQ;UAChBC,QAAQ,EAAEE,gBAAgB,CAACgO,uBAAuB,CAAA;AACpD,SAAC,CAAC,CAAA;AACF;AACA;QACArJ,QAAQ,CAACX,QAAQ,GAAGA,QAAQ,CAAA;AAC9B,OAAA;MACA8J,cAAc,CAAClR,SAAS,CAACiI,MAAM,CAACF,QAAQ,EAA4BD,EAAE,CAAC,CAAA;KACxE,CAAA;AAEDwH,IAAAA,qBAAqB,CAAChF,eAAe,GAAI,CAAClJ,OAAkC,EAAE0G,EAAgC,KAAK;MACjH,MAAMC,QAAQ,GAAG3G,OAAO,CAAA;AACxB,MAAA,IAAI,CAACT,KAAK,CAACC,OAAO,CAACmH,QAAQ,CAAC,IAAI4E,4BAA4B,CAACpE,GAAG,CAACR,QAAQ,CAAC/L,MAAM,CAAC,EAAE;AACjF,QAAA,MAAMoL,QAAQ,GAAG+J,QAAQ,EAAE,CAAA;AAC3B7B,QAAAA,qBAAqB,CAACnI,YAAY,CAACC,QAAQ,EAAE;AAC3CnE,UAAAA,MAAM,EAAE,QAAQ;AAChBC,UAAAA,QAAQ,EAAEE,gBAAgB,CAACiO,+BAA+B,CAAC;AAC7D,SAAC,CAAC,CAAA;AACF;AACCtJ,QAAAA,QAAQ,CAAClH,MAAM,CAA6BuG,QAAQ,GAAGA,QAAQ,CAAA;AAClE,OAAA;MACAkI,qBAAqB,CAACtP,SAAS,CAACiI,MAAM,CAACF,QAAQ,EAA0BD,EAAE,CAAC,CAAA;KACoC,CAAA;;AAElH;IACA,MAAMwJ,qCAAqC,GAAIC,CAA4B,IAAK;AAC9E,MAAA,MAAMC,cAAc,GAAGN,cAAc,CAACK,CAAC,CAAC,CAAA;AACxC;MACA,MAAME,IAAI,GAAG,IAAI,CAAA;;AAEjB;AACA;MACAP,cAAc,CAACK,CAAC,CAAC,GAAG,SAASG,YAAYA,CAACpS,OAAO,EAAEwI,EAAE,EAAE;QACrD,MAAM;UAAE9L,MAAM;AAAE6E,UAAAA,MAAM,GAAG,EAAA;AAAG,SAAC,GAAGvB,OAAO,CAAA;QACvC,IAAItD,MAAM,KAAK,qBAAqB,EAAE;AACpC,UAAA,IAAI,CAAC8L,EAAE,EAAE,OAAO2J,IAAI,CAACrC,KAAK,CAAC;YAAEC,aAAa,EAAExO,MAAM,CAAC,CAAC,CAAA;AAAE,WAAC,CAAC,CAAA;UACxD4Q,IAAI,CACDrC,KAAK,CAAC;YAAEC,aAAa,EAAExO,MAAM,CAAC,CAAC,CAAA;WAAG,CAAA;AACnC;WACC8Q,IAAI,CAAE1U,GAAG,IAAK6K,EAAE,CAAC,IAAI,EAAE7K,GAAG,CAAC,CAAA;AAC5B;WACC2U,KAAK,CAAEvH,GAAG,IAAKvC,EAAE,CAACuC,GAAG,CAAC,CAAC,CAAA;AAC5B,SAAA;QACA,OAAQmH,cAAc,CAA6CK,KAAK,CAAC,IAAI,EAAE,CAACvS,OAAO,EAAEwI,EAAE,CAAC,CAAC,CAAA;OAC9F,CAAA;KACF,CAAA;;AAED;IACAwJ,qCAAqC,CAAC,SAAS,CAAC,CAAA;IAChDA,qCAAqC,CAAC,WAAW,CAAC,CAAA;IAClDA,qCAAqC,CAAC,MAAM,CAAC,CAAA;AAE7C,IAAA,MAAMQ,qBAAqB,GAAG,IAAIC,KAAK,CAACb,cAAc,EAAE;AACtD;AACA;MACAc,cAAc,EAAEA,MAAM,IAAA;AACxB,KAAC,CAAC,CAAA;AAEF,IAAA,MAAMC,4BAA4B,GAAG,IAAIF,KAAK,CAACzC,qBAAqB,EAAE;AACpE;AACA;MACA0C,cAAc,EAAEA,MAAM,IAAA;AACxB,KAAC,CAAC,CAAA;IAEF,IAAI,CAACzC,QAAQ,GAAGuC,qBAAqB,CAAA;IACrC,IAAI,CAACxC,qBAAqB,GAAG2C,4BAA4B,CAAA;AAEzDtU,IAAAA,GAAG,CAAClB,IAAI,CAAC,iBAAiB,CAAC,CAAA;AAC3B,IAAA,MAAMuE,OAAO,CAACkR,GAAG,CAAC,CAChBhB,cAAc,CAAC7R,eAAe,EAAE,EAChCiQ,qBAAqB,CAACjQ,eAAe,CAAA7B,aAAA,CAAAA,aAAA,KAChCoT,cAAc,CAAA,EAAA,EAAA,EAAA;MACjB9K,WAAW,EAAE,IAAI,CAACgJ,YAAAA;KACnB,CAAA,CAAC,CACH,CAAC,CAAA;AACFnR,IAAAA,GAAG,CAACuK,KAAK,CAAC,6BAA6B,CAAC,CAAA;AAC1C,GAAA;AACF;;;;"}